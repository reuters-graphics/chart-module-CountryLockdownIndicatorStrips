{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ErrorDataType, ErrorDrawMethodUndefined, ErrorPropsType, ErrorSelectorType } from './errorClasses';\nimport d3 from '../utils/d3';\nimport merge from 'lodash/merge';\n\nclass ChartComponent {\n  constructor(selector, props, data) {\n    _defineProperty(this, \"defaultProps\", {});\n\n    _defineProperty(this, \"defaultData\", []);\n\n    this.selection(selector);\n    this.props(props);\n    this.data(data);\n  }\n  /**\n   * Getter/setter for DOM node chart is drawn into\n   * @param  {String or Element} selector\n   */\n\n\n  selection(selector) {\n    if (!selector) return this._selection;\n\n    if (!(selector instanceof Element) && typeof selector !== 'string') {\n      throw new ErrorSelectorType(this.constructor.name);\n    }\n\n    this._selection = d3.select(selector);\n    return this;\n  }\n  /**\n   * Default props\n   * @type {Object}\n   */\n\n\n  /**\n   * Getter/setter for props object\n   * @param  {Object} obj props\n   */\n  props(obj) {\n    if (!obj) return this._props || this.defaultProps;\n\n    if (!(obj instanceof Object)) {\n      throw new ErrorPropsType(this.constructor.name);\n    }\n\n    this._props = merge(this._props || this.defaultProps, obj);\n    return this;\n  }\n  /**\n   * Default data\n   * @type {Array}\n   */\n\n\n  /**\n   * Getter/setter for chart data\n   * @param  {Array} arr data\n   */\n  data(arr) {\n    if (!arr) return this._data || this.defaultData;\n\n    if (!(arr instanceof Array)) {\n      throw new ErrorDataType(this.constructor.name);\n    }\n\n    this._data = arr;\n    return this;\n  }\n\n  draw() {\n    throw new ErrorDrawMethodUndefined(this.constructor.name);\n  }\n\n}\n\nexport default ChartComponent;","map":{"version":3,"sources":["/Users/u6068973/Documents/work/coronavirus/tracker-news-app/chart-module-CountryLockdownIndicatorStrips/src/lib/base/ChartComponent.js"],"names":["ErrorDataType","ErrorDrawMethodUndefined","ErrorPropsType","ErrorSelectorType","d3","merge","ChartComponent","constructor","selector","props","data","selection","_selection","Element","name","select","obj","_props","defaultProps","Object","arr","_data","defaultData","Array","draw"],"mappings":";;AAAA,SACEA,aADF,EAEEC,wBAFF,EAGEC,cAHF,EAIEC,iBAJF,QAKO,gBALP;AAOA,OAAOC,EAAP,MAAe,aAAf;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,MAAMC,cAAN,CAAqB;AACnBC,EAAAA,WAAW,CAACC,QAAD,EAAWC,KAAX,EAAkBC,IAAlB,EAAwB;AAAA,0CAyBpB,EAzBoB;;AAAA,yCA8CrB,EA9CqB;;AACjC,SAAKC,SAAL,CAAeH,QAAf;AACA,SAAKC,KAAL,CAAWA,KAAX;AACA,SAAKC,IAAL,CAAUA,IAAV;AACD;AAED;;;;;;AAIAC,EAAAA,SAAS,CAACH,QAAD,EAAW;AAClB,QAAI,CAACA,QAAL,EAAe,OAAO,KAAKI,UAAZ;;AAEf,QAAI,EAAEJ,QAAQ,YAAYK,OAAtB,KAAkC,OAAOL,QAAP,KAAoB,QAA1D,EAAoE;AAClE,YAAM,IAAIL,iBAAJ,CAAsB,KAAKI,WAAL,CAAiBO,IAAvC,CAAN;AACD;;AAED,SAAKF,UAAL,GAAkBR,EAAE,CAACW,MAAH,CAAUP,QAAV,CAAlB;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAMA;;;;AAIAC,EAAAA,KAAK,CAACO,GAAD,EAAM;AACT,QAAI,CAACA,GAAL,EAAU,OAAO,KAAKC,MAAL,IAAe,KAAKC,YAA3B;;AAEV,QAAI,EAAEF,GAAG,YAAYG,MAAjB,CAAJ,EAA8B;AAC5B,YAAM,IAAIjB,cAAJ,CAAmB,KAAKK,WAAL,CAAiBO,IAApC,CAAN;AACD;;AAED,SAAKG,MAAL,GAAcZ,KAAK,CAAC,KAAKY,MAAL,IAAe,KAAKC,YAArB,EAAmCF,GAAnC,CAAnB;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAMA;;;;AAIAN,EAAAA,IAAI,CAACU,GAAD,EAAM;AACR,QAAI,CAACA,GAAL,EAAU,OAAO,KAAKC,KAAL,IAAc,KAAKC,WAA1B;;AAEV,QAAI,EAAEF,GAAG,YAAYG,KAAjB,CAAJ,EAA6B;AAC3B,YAAM,IAAIvB,aAAJ,CAAkB,KAAKO,WAAL,CAAiBO,IAAnC,CAAN;AACD;;AAED,SAAKO,KAAL,GAAaD,GAAb;AACA,WAAO,IAAP;AACD;;AAEDI,EAAAA,IAAI,GAAG;AACL,UAAM,IAAIvB,wBAAJ,CAA6B,KAAKM,WAAL,CAAiBO,IAA9C,CAAN;AACD;;AAlEkB;;AAqErB,eAAeR,cAAf","sourcesContent":["import {\n  ErrorDataType,\n  ErrorDrawMethodUndefined,\n  ErrorPropsType,\n  ErrorSelectorType\n} from './errorClasses';\n\nimport d3 from '../utils/d3';\nimport merge from 'lodash/merge';\n\nclass ChartComponent {\n  constructor(selector, props, data) {\n    this.selection(selector);\n    this.props(props);\n    this.data(data);\n  }\n\n  /**\n   * Getter/setter for DOM node chart is drawn into\n   * @param  {String or Element} selector\n   */\n  selection(selector) {\n    if (!selector) return this._selection;\n\n    if (!(selector instanceof Element) && typeof selector !== 'string') {\n      throw new ErrorSelectorType(this.constructor.name);\n    }\n\n    this._selection = d3.select(selector);\n    return this;\n  }\n\n  /**\n   * Default props\n   * @type {Object}\n   */\n  defaultProps = {}\n\n  /**\n   * Getter/setter for props object\n   * @param  {Object} obj props\n   */\n  props(obj) {\n    if (!obj) return this._props || this.defaultProps;\n\n    if (!(obj instanceof Object)) {\n      throw new ErrorPropsType(this.constructor.name);\n    }\n\n    this._props = merge(this._props || this.defaultProps, obj);\n    return this;\n  }\n\n  /**\n   * Default data\n   * @type {Array}\n   */\n  defaultData = []\n\n  /**\n   * Getter/setter for chart data\n   * @param  {Array} arr data\n   */\n  data(arr) {\n    if (!arr) return this._data || this.defaultData;\n\n    if (!(arr instanceof Array)) {\n      throw new ErrorDataType(this.constructor.name);\n    }\n\n    this._data = arr;\n    return this;\n  }\n\n  draw() {\n    throw new ErrorDrawMethodUndefined(this.constructor.name);\n  }\n}\n\nexport default ChartComponent;\n"]},"metadata":{},"sourceType":"module"}