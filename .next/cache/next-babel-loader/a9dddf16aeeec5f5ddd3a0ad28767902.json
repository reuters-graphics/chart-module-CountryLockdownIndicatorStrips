{"ast":null,"code":"var _jsxFileName = \"/Users/prasanta/ReutersWork/INTERACTIVES/COVID-APP/chart-module-CountryLockdownIndicatorStrips/src/demo/Chart.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Chart from '../lib/chart.js';\nimport ChartContainer from './furniture/ChartContainer';\nimport React from 'react';\nimport { base } from '@reuters-graphics/style-color/dist/categorical';\nimport debounce from 'lodash/debounce';\nimport WeeklyAverage from '@reuters-graphics/chart-module-weeklyaverage';\n\nclass ChartComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      width: ''\n    });\n\n    _defineProperty(this, \"chartContainer\", React.createRef());\n\n    _defineProperty(this, \"chart\", new Chart());\n\n    _defineProperty(this, \"myChart\", new WeeklyAverage());\n\n    _defineProperty(this, \"resize\", debounce(() => {\n      this.chart.draw();\n    }, 250));\n  }\n\n  componentDidMount() {\n    // Use our chart module.\n    this.chart.selection(this.chartContainer.current) // .props({ fill: base.blue.hex })\n    // .data()\n    .draw(); // // Use it again.\n    // setTimeout(() => {\n    //   this.chart\n    //     // .data([20, 34, 48, 60])\n    //     .props({ fill: base.orange.hex })\n    //     .draw();\n    // }, 1000);\n    // setTimeout(() => {\n    //   this.chart\n    //     // .data([30, 50, 30])\n    //     .props({ fill: base.blue.hex })\n    //     .draw();\n    // }, 2000);\n    // Add a listener to resize chart with the window.\n\n    window.addEventListener('resize', this.resize);\n    myChart.data([{\n      \"date\": \"2020-07-05\",\n      \"count\": 10000\n    }, {\n      \"date\": \"2020-07-06\",\n      \"count\": 20000\n    }, {\n      \"date\": \"2020-07-04\",\n      \"count\": 10000\n    }]).draw();\n  }\n\n  componentWillUnmount() {\n    // Remove listener if the component is removed, too.\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    // Update the chart with the component.\n    // Can change data or props here, whatever...\n    this.chart.draw();\n  }\n\n  render() {\n    const {\n      width\n    } = this.state;\n    return __jsx(ChartContainer, {\n      width: width,\n      setWidth: width => this.setState({\n        width\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 18\n      }\n    }, \" \", __jsx(\"div\", {\n      id: \"chart\",\n      ref: this.chartContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 54\n      }\n    }), \"  \");\n  }\n\n}\n\nexport default ChartComponent;","map":{"version":3,"sources":["/Users/prasanta/ReutersWork/INTERACTIVES/COVID-APP/chart-module-CountryLockdownIndicatorStrips/src/demo/Chart.js"],"names":["Chart","ChartContainer","React","base","debounce","WeeklyAverage","ChartComponent","Component","width","createRef","chart","draw","componentDidMount","selection","chartContainer","current","window","addEventListener","resize","myChart","data","componentWillUnmount","removeEventListener","componentDidUpdate","render","state","setState"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,gDAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAOC,aAAP,MAA0B,8CAA1B;;AAIA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAAA;AAAA;;AAAA,mCACjC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADiC;;AAAA,4CAExBN,KAAK,CAACO,SAAN,EAFwB;;AAAA,mCAKjC,IAAIT,KAAJ,EALiC;;AAAA,qCAM/B,IAAIK,aAAJ,EAN+B;;AAAA,oCAShCD,QAAQ,CAAC,MAAM;AAAE,WAAKM,KAAL,CAAWC,IAAX;AAAoB,KAA7B,EAA+B,GAA/B,CATwB;AAAA;;AAWzCC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKF,KAAL,CACKG,SADL,CACe,KAAKC,cAAL,CAAoBC,OADnC,EAEI;AACA;AAHJ,KAIKJ,IAJL,GAFgB,CAQhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAK,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,MAAvC;AAEAC,IAAAA,OAAO,CACFC,IADL,CACU,CACF;AAAE,cAAQ,YAAV;AAAwB,eAAS;AAAjC,KADE,EAEF;AAAE,cAAQ,YAAV;AAAwB,eAAS;AAAjC,KAFE,EAGF;AAAE,cAAQ,YAAV;AAAwB,eAAS;AAAjC,KAHE,CADV,EAMKT,IANL;AAOH;;AAEDU,EAAAA,oBAAoB,GAAG;AACnB;AACAL,IAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqC,KAAKJ,MAA1C;AACH;;AAEDK,EAAAA,kBAAkB,GAAG;AACjB;AACA;AACA,SAAKb,KAAL,CAAWC,IAAX;AACH;;AAEDa,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEhB,MAAAA;AAAF,QAAY,KAAKiB,KAAvB;AACA,WAAS,MAAE,cAAF;AAAiB,MAAA,KAAK,EAAKjB,KAA3B;AACL,MAAA,QAAQ,EACHA,KAAD,IAAW,KAAKkB,QAAL,CAAc;AAAElB,QAAAA;AAAF,OAAd,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIoC;AAAM,MAAA,EAAE,EAAG,OAAX;AACzC,MAAA,GAAG,EAAK,KAAKM,cAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJpC,OAAT;AASH;;AAnEwC;;AAsE7C,eAAeR,cAAf","sourcesContent":["import Chart from '../lib/chart.js';\nimport ChartContainer from './furniture/ChartContainer';\nimport React from 'react';\nimport { base } from '@reuters-graphics/style-color/dist/categorical';\nimport debounce from 'lodash/debounce';\n\nimport WeeklyAverage from '@reuters-graphics/chart-module-weeklyaverage';\n\n\n\nclass ChartComponent extends React.Component {\n    state = { width: '' };\n    chartContainer = React.createRef();\n\n    // Instantiate and add our chart class to this component.\n    chart = new Chart();\n    myChart = new WeeklyAverage();\n\n    // A resize function to redraw the chart.\n    resize = debounce(() => { this.chart.draw(); }, 250);\n\n    componentDidMount() {\n        // Use our chart module.\n        this.chart\n            .selection(this.chartContainer.current)\n            // .props({ fill: base.blue.hex })\n            // .data()\n            .draw();\n\n        // // Use it again.\n        // setTimeout(() => {\n        //   this.chart\n        //     // .data([20, 34, 48, 60])\n        //     .props({ fill: base.orange.hex })\n        //     .draw();\n        // }, 1000);\n        // setTimeout(() => {\n        //   this.chart\n        //     // .data([30, 50, 30])\n        //     .props({ fill: base.blue.hex })\n        //     .draw();\n        // }, 2000);\n\n        // Add a listener to resize chart with the window.\n        window.addEventListener('resize', this.resize);\n\n        myChart\n            .data([\n                { \"date\": \"2020-07-05\", \"count\": 10000 },\n                { \"date\": \"2020-07-06\", \"count\": 20000 },\n                { \"date\": \"2020-07-04\", \"count\": 10000 }\n            ])\n            .draw();\n    }\n\n    componentWillUnmount() {\n        // Remove listener if the component is removed, too.\n        window.removeEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate() {\n        // Update the chart with the component.\n        // Can change data or props here, whatever...\n        this.chart.draw();\n    }\n\n    render() {\n        const { width } = this.state;\n        return ( < ChartContainer width = { width }\n            setWidth = {\n                (width) => this.setState({ width })\n            } >\n            { /* This is our chart container ðŸ‘‡ */ } < div id = 'chart'\n            ref = { this.chartContainer }\n            />  <\n            /ChartContainer>\n        );\n    }\n}\n\nexport default ChartComponent;"]},"metadata":{},"sourceType":"module"}