{"ast":null,"code":"var _jsxFileName = \"/Users/prasanta/ReutersWork/INTERACTIVES/COVID-APP/chart-module-CountryLockdownIndicatorStrips/src/demo/Chart.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Chart from '../lib/chart.js';\nimport ChartContainer from './furniture/ChartContainer';\nimport casesData from './casesData.json';\nimport React from 'react';\nimport { base } from '@reuters-graphics/style-color/dist/categorical';\nimport debounce from 'lodash/debounce';\nimport WeeklyAverage from '@reuters-graphics/chart-module-weeklyaverage';\n\nclass ChartComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      width: ''\n    });\n\n    _defineProperty(this, \"chartContainer\", React.createRef());\n\n    _defineProperty(this, \"myChartContainer\", React.createRef());\n\n    _defineProperty(this, \"chart\", new Chart());\n\n    _defineProperty(this, \"myChart\", new WeeklyAverage());\n\n    _defineProperty(this, \"resize\", debounce(() => {\n      this.chart.draw();\n      this.myChart.draw();\n    }, 250));\n  }\n\n  componentDidMount() {\n    // Use our chart module.\n    this.chart.selection(this.chartContainer.current) // .props({ fill: base.blue.hex })\n    // .data()\n    .draw(); // Add a listener to resize chart with the window.\n\n    window.addEventListener('resize', this.resize); // Gurman's chart\n\n    this.myChart.selection(this.myChartContainer.current).data(casesData).props({\n      stroke: '#4C566A',\n      // colour of line\n      strokeWidth: 3.618,\n      // width of the line\n      fill: '#eee',\n      // colour of the bars\n      height: 200,\n      // chart height\n      avg_days: 7,\n      // avg line should be an how many day rolling avg\n      left_y_axis: true,\n      x_axis: false,\n      bars: false,\n      // True by default.\n      // If you want just the line, set value to true\n      margin: {\n        left: 18,\n        right: 18,\n        top: 10,\n        bottom: 5\n      },\n      date_range: ['2020-02-21', '2020-07-08'],\n      padding: 0,\n      // to set padding between the bars.\n      // value should be between 0 to 1\n      labels: false,\n      // Setting this to true will show a label\n      // to explain what the bars and line are\n      variable_name: 'cases' // What is this a chart of? Infections? Deaths? Tests?\n\n    }).draw();\n  }\n\n  componentWillUnmount() {\n    // Remove listener if the component is removed, too.\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    // Update the chart with the component.\n    // Can change data or props here, whatever...\n    this.chart.draw();\n    this.myChart.draw();\n  }\n\n  render() {\n    const {\n      width\n    } = this.state;\n    return __jsx(ChartContainer, {\n      width: width,\n      setWidth: width => this.setState({\n        width\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \" \", __jsx(\"div\", {\n      id: \"myChart\",\n      ref: this.myChartContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      id: \"chart\",\n      ref: this.chartContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default ChartComponent;","map":{"version":3,"sources":["/Users/prasanta/ReutersWork/INTERACTIVES/COVID-APP/chart-module-CountryLockdownIndicatorStrips/src/demo/Chart.js"],"names":["Chart","ChartContainer","casesData","React","base","debounce","WeeklyAverage","ChartComponent","Component","width","createRef","chart","draw","myChart","componentDidMount","selection","chartContainer","current","window","addEventListener","resize","myChartContainer","data","props","stroke","strokeWidth","fill","height","avg_days","left_y_axis","x_axis","bars","margin","left","right","top","bottom","date_range","padding","labels","variable_name","componentWillUnmount","removeEventListener","componentDidUpdate","render","state","setState"],"mappings":"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","sourcesContent":["import Chart from '../lib/chart.js';\nimport ChartContainer from './furniture/ChartContainer';\nimport casesData from './casesData.json';\nimport React from 'react';\nimport { base } from '@reuters-graphics/style-color/dist/categorical';\nimport debounce from 'lodash/debounce';\n\nimport WeeklyAverage from '@reuters-graphics/chart-module-weeklyaverage';\n\nclass ChartComponent extends React.Component {\n    state = { width: '' };\n    chartContainer = React.createRef();\n\n    myChartContainer = React.createRef();\n\n    // Instantiate and add our chart class to this component.\n    chart = new Chart();\n    myChart = new WeeklyAverage();\n\n    // A resize function to redraw the chart.\n    resize = debounce(() => {\n      this.chart.draw();\n      this.myChart.draw();\n    }, 250);\n\n    componentDidMount() {\n      // Use our chart module.\n      this.chart\n        .selection(this.chartContainer.current)\n      // .props({ fill: base.blue.hex })\n      // .data()\n        .draw();\n\n      // Add a listener to resize chart with the window.\n      window.addEventListener('resize', this.resize);\n\n      // Gurman's chart\n\n      this.myChart\n        .selection(this.myChartContainer.current)\n        .data(casesData)\n        .props({\n          stroke: '#4C566A', // colour of line\n          strokeWidth: 3.618, // width of the line\n          fill: '#eee', // colour of the bars\n          height: 200, // chart height\n          avg_days: 7, // avg line should be an how many day rolling avg\n          left_y_axis: true,\n          x_axis: false,\n          bars: false, // True by default.\n          // If you want just the line, set value to true\n          margin: {\n            left: 18, right: 18, top: 10, bottom: 5,\n          },\n          date_range: ['2020-02-21', '2020-07-08'],\n          padding: 0, // to set padding between the bars.\n          // value should be between 0 to 1\n\n          labels: false, // Setting this to true will show a label\n          // to explain what the bars and line are\n\n          variable_name: 'cases', // What is this a chart of? Infections? Deaths? Tests?\n        })\n        .draw();\n    }\n\n    componentWillUnmount() {\n      // Remove listener if the component is removed, too.\n      window.removeEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate() {\n      // Update the chart with the component.\n      // Can change data or props here, whatever...\n      this.chart.draw();\n      this.myChart.draw();\n    }\n\n    render() {\n      const { width } = this.state;\n      return (\n        <ChartContainer\n          width={width}\n          setWidth={\n            (width) => this.setState({ width })\n          }\n        > {/* This is our chart container ðŸ‘‡ */}\n          <div id='myChart' ref={this.myChartContainer} />\n          <div id='chart' ref={this.chartContainer} />\n        </ChartContainer>\n      );\n    }\n}\n\nexport default ChartComponent;\n"]},"metadata":{},"sourceType":"module"}