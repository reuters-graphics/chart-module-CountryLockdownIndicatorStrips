{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-trailing-spaces */\nimport ChartComponent from './base/ChartComponent';\nimport d3 from './utils/d3';\nimport { getDates, round } from './utils/utils';\nimport defaultData from './defaultData.json';\nimport { interpolateHcl } from 'd3';\nimport d3SelectionMulti from 'd3-selection-multi'; // see docs on https://github.com/reuters-graphics/graphics-atlas-client\n// import AtlasMetadataClient from '@reuters-graphics/graphics-atlas-client';\n// const atlastClient = new AtlasMetadataClient();\n\nconst dateParse = d3.timeParse('%Y-%m-%d');\nconst dateFormat = d3.timeFormat('%b %e');\nconst dateFormat_tt = d3.timeFormat('%B %e');\nconst numberFormat_tt = d3.format(',');\n\nclass CountryLockdownIndicatorStrips extends ChartComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"defaultProps\", {\n      // dateSeries: ['2019-12-31', '2020-07-10'], // 2020-01-31\n      dataParams: {\n        date: 'date',\n        index: 'c1',\n        steps: 2,\n        // stepValue = 0, 1...\n        stepValue: 'flag'\n      },\n      height: 150,\n      stripHeight: 50,\n      margin: {\n        top: 10,\n        right: 0,\n        bottom: 10,\n        left: 0\n      },\n      valign: 'center',\n      // start, center, baseline\n      baseColor: '#ECEFF4',\n      stripColor: {\n        // should be numeric values that are mapped from the data\n        0: '#d1eeea',\n        1: '#ffe47f',\n        2: 'orange',\n        3: '#a50f15'\n      },\n      legendItems: {\n        // should contain items from stripColor\n        null: 'no data',\n        stepLegend: {\n          0: 'targeted',\n          1: 'nationwide'\n        },\n        indexLegend: {\n          0: 'no measures',\n          1: 'recommend closing',\n          2: 'require closing on some levels',\n          3: 'require closing all levels'\n        }\n      }\n    });\n\n    _defineProperty(this, \"defaultData\", defaultData);\n  }\n\n  draw() {\n    const data = this.data();\n    const props = this.props();\n    const node = this.selection().node();\n\n    if (!props.dateSeries) {\n      props.dateSeries = [dateParse(data[0].date), dateParse(data[data.length - 1].date)];\n    }\n\n    const dateList = getDates(props.dateSeries[0], props.dateSeries[1]);\n    console.log(dateList); // get country details from AtlasClient from ISO-2\n    // props.country = atlastClient.getCountry(props.countryISO2);\n\n    const {\n      width\n    } = node.getBoundingClientRect();\n    const transition = d3.transition().duration(750); // main chart container\n\n    const chartDiv = this.selection().appendSelect('div') // see docs in ./utils/d3.js\n    .attr('class', 'CountryLockdownIndicatorStrips').style('width', `${width}px`) // .style('height', `${props.height}px`)\n    .appendSelect('div').styles({\n      'padding-top': `${props.margin.top}px`,\n      'padding-right': `${props.margin.right}px`,\n      'padding-bottom': `${props.margin.bottom}px`,\n      'padding-left': `${props.margin.left}px`\n    });\n    const stripheight = props.legendItems ? props.stripHeight - props.margin.top : props.height - props.margin.top - props.margin.bottom; // set scales\n\n    const yScale = d3.scaleLinear().domain([0, props.dataParams.steps - 1]).range([stripheight, props.margin.top]);\n    const xScale = d3.scaleBand().domain(data.map(d => dateParse(d[props.dataParams.date]))).range([props.margin.left, width - props.margin.right]).padding(0);\n    const colorDomain = props.stripColor ? Object.keys(props.stripColor).map(d => +d) : d3.extent(data.map(d => d[props.dataParams.index]));\n    const colorRange = props.stripColor ? colorDomain.map(d => props.stripColor[`${d}`]) : ['#cccccc', '#333333'];\n    const colorScale = d3.scaleLinear().domain(colorDomain).range(colorRange).interpolate(interpolateHcl); // make bars\n\n    const bars = chartDiv.appendSelect('div.bars-container').styles({\n      display: 'flex',\n      'align-items': `${props.valign}`\n    }).selectAll('.bar').data(data, (d, i) => d[props.dataParams.date]); // for smooth data updation\n\n    bars.enter().append('div').attr('class', d => `bar ${d[props.dataParams.date]}`).style('display', 'inline-block').style('height', d => {\n      const stepSize = stripheight / props.dataParams.steps;\n      const step = d[props.dataParams.stepValue] + 1;\n      return d[props.dataParams.index] ? step ? step * stepSize + 'px' : stepSize + 'px' : stepSize + 'px';\n    }).style('width', xScale.bandwidth() + 'px').style('background', d => {\n      const val = parseFloat(d[props.dataParams.index]);\n      return val !== null && !isNaN(val) ? colorScale(val) : props.baseColor;\n    }).merge(bars).transition(transition).style('display', 'inline-block').style('height', d => {\n      const stepSize = stripheight / props.dataParams.steps;\n      const step = d[props.dataParams.stepValue] + 1;\n      return d[props.dataParams.index] ? step ? step * stepSize + 'px' : stepSize + 'px' : stepSize + 'px';\n    }).style('width', xScale.bandwidth() + 'px').style('background', d => {\n      const val = parseFloat(d[props.dataParams.index]);\n      return val !== null && !isNaN(val) ? colorScale(val) : props.baseColor;\n    });\n    bars.exit().transition(transition).attr('height', 0).remove();\n\n    if (props.legendItems) {\n      const indexLegendItems = [];\n      Object.keys(props.legendItems.indexLegend).forEach(d => {\n        const item = {\n          key: d,\n          value: props.legendItems.indexLegend[d]\n        };\n        indexLegendItems.push(item);\n      });\n\n      if (props.legendItems.null) {\n        indexLegendItems.push({\n          key: 'null',\n          value: props.legendItems.null\n        });\n      }\n\n      const legendWidth = (width - props.margin.right - props.margin.left) / indexLegendItems.length; // make legend\n\n      const legendDiv = chartDiv.appendSelect('div.legend-container');\n      const indexLegend = legendDiv.appendSelect('div.legend.indexLegend') // .style('align-items', `${props.valign}`)\n      .selectAll('.legend-item').data(indexLegendItems); // for smooth data updation\n\n      indexLegend.enter().append('div').attr('class', 'legend-item').styles({\n        display: 'flex',\n        'align-items': 'start'\n      }) // .style('width', `${legendWidth}px`)\n      .html(d => {\n        const color = +d.key !== null && !isNaN(+d.key) ? props.stripColor[+d.key] : props.baseColor;\n        return `<span style=\"width:1rem; height:1rem;min-width:1rem; min-height:1rem; background: ${color}\"></span> <p style=\"margin:0 0 0 0.5rem;\">${d.value}</p>`;\n      }).merge(indexLegend).styles({\n        display: 'flex',\n        'align-items': 'start'\n      }).style('width', `${legendWidth}px`).html(d => {\n        const color = +d.key !== null && !isNaN(+d.key) ? props.stripColor[+d.key] : props.baseColor;\n        return `<span style=\"width:1rem; height:1rem;min-width:1rem; min-height:1rem; background: ${color}\"></span> <p style=\"margin:0 0 0 0.5rem;\">${d.value}</p>`;\n      });\n      indexLegend.exit().transition(transition).remove();\n\n      if (props.legendItems.stepLegend) {\n        // step legend stuff\n        const stepLegendItems = [];\n        Object.keys(props.legendItems.stepLegend).forEach(d => {\n          const item = {\n            key: d,\n            value: props.legendItems.stepLegend[d]\n          };\n          stepLegendItems.push(item);\n        });\n        console.log(stepLegendItems);\n        const stepLegend = legendDiv.appendSelect('div.legend.stepLegend').selectAll('.legend-item').data(stepLegendItems); // for smooth data updation\n\n        stepLegend.enter().append('div').attr('class', 'legend-item').styles({\n          display: 'flex',\n          'align-items': 'center'\n        }).html((d, i) => {\n          const stepSize = stripheight / stepLegendItems.length;\n          return `<span style=\"width:${8}px; height:${(+d.key + 1) * stepSize}px; background:transparent; border: 0.5px solid #333333;\"></span><p style=\"margin:0 0 0 0.5rem;\">${d.value}</p>`;\n        }).merge(stepLegend).styles({\n          display: 'flex',\n          'align-items': 'center'\n        }).html((d, i) => {\n          const stepSize = stripheight / stepLegendItems.length;\n          return `<span style=\"width:${8}px; height:${(+d.key + 1) * stepSize}px; background:transparent; border: 0.5px solid #333333;\"></span><p style=\"margin:0 0 0 0.5rem;\">${d.value}</p>`;\n        });\n        stepLegend.exit().transition(transition).remove();\n      }\n    }\n\n    return this;\n  }\n\n} // console.log(this.defaultProps);\n\n\nexport default CountryLockdownIndicatorStrips;","map":{"version":3,"sources":["/Users/prasanta/ReutersWork/INTERACTIVES/COVID-APP/chart-module-CountryLockdownIndicatorStrips/src/lib/chart.js"],"names":["ChartComponent","d3","getDates","round","defaultData","interpolateHcl","d3SelectionMulti","dateParse","timeParse","dateFormat","timeFormat","dateFormat_tt","numberFormat_tt","format","CountryLockdownIndicatorStrips","dataParams","date","index","steps","stepValue","height","stripHeight","margin","top","right","bottom","left","valign","baseColor","stripColor","legendItems","null","stepLegend","indexLegend","draw","data","props","node","selection","dateSeries","length","dateList","console","log","width","getBoundingClientRect","transition","duration","chartDiv","appendSelect","attr","style","styles","stripheight","yScale","scaleLinear","domain","range","xScale","scaleBand","map","d","padding","colorDomain","Object","keys","extent","colorRange","colorScale","interpolate","bars","display","selectAll","i","enter","append","stepSize","step","bandwidth","val","parseFloat","isNaN","merge","exit","remove","indexLegendItems","forEach","item","key","value","push","legendWidth","legendDiv","html","color","stepLegendItems"],"mappings":"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","sourcesContent":["/* eslint-disable no-trailing-spaces */\nimport ChartComponent from './base/ChartComponent';\nimport d3 from './utils/d3';\nimport { getDates, round } from './utils/utils';\nimport defaultData from './defaultData.json';\nimport { interpolateHcl } from 'd3';\nimport d3SelectionMulti from 'd3-selection-multi';\n// see docs on https://github.com/reuters-graphics/graphics-atlas-client\n// import AtlasMetadataClient from '@reuters-graphics/graphics-atlas-client';\n// const atlastClient = new AtlasMetadataClient();\n\nconst dateParse = d3.timeParse('%Y-%m-%d');\nconst dateFormat = d3.timeFormat('%b %e');\nconst dateFormat_tt = d3.timeFormat('%B %e');\nconst numberFormat_tt = d3.format(',');\n\nclass CountryLockdownIndicatorStrips extends ChartComponent {\n    defaultProps = {\n      // dateSeries: ['2019-12-31', '2020-07-10'], // 2020-01-31\n      dataParams: {\n        date: 'date',\n        index: 'c1',\n        steps: 2, // stepValue = 0, 1...\n        stepValue: 'flag',\n      },\n      height: 150,\n      stripHeight: 50,\n      margin: {\n        top: 10,\n        right: 0,\n        bottom: 10,\n        left: 0,\n      },\n      valign: 'center', // start, center, baseline\n      baseColor: '#ECEFF4',\n      stripColor: { // should be numeric values that are mapped from the data\n        0: '#d1eeea',\n        1: '#ffe47f',\n        2: 'orange',\n        3: '#a50f15',\n      },\n      legendItems: { // should contain items from stripColor\n        null: 'no data',\n        stepLegend: {\n          0: 'targeted',\n          1: 'nationwide',\n        },\n        indexLegend: {\n          0: 'no measures',\n          1: 'recommend closing',\n          2: 'require closing on some levels',\n          3: 'require closing all levels',\n        },\n      },\n    };\n\n    defaultData = defaultData;\n\n    draw() {\n      const data = this.data();\n      const props = this.props();\n      const node = this.selection().node();\n\n      if (!props.dateSeries) {\n        props.dateSeries = [dateParse(data[0].date), dateParse(data[data.length - 1].date)];\n      }\n      const dateList = getDates(props.dateSeries[0], props.dateSeries[1]);       \n      console.log(dateList);\n       \n      // get country details from AtlasClient from ISO-2\n      // props.country = atlastClient.getCountry(props.countryISO2);\n\n      const {\n        width,\n      } = node.getBoundingClientRect();\n\n      const transition = d3.transition()\n        .duration(750);\n\n      // main chart container\n      const chartDiv = this.selection()\n        .appendSelect('div') // see docs in ./utils/d3.js\n        .attr('class', 'CountryLockdownIndicatorStrips')\n        .style('width', `${width}px`)\n      // .style('height', `${props.height}px`)\n        .appendSelect('div')\n        .styles({\n          'padding-top': `${props.margin.top}px`,\n          'padding-right': `${props.margin.right}px`,\n          'padding-bottom': `${props.margin.bottom}px`,\n          'padding-left': `${props.margin.left}px`,\n        });\n\n      const stripheight = props.legendItems ? (props.stripHeight - props.margin.top) : (props.height - props.margin.top - props.margin.bottom);\n\n      // set scales\n      const yScale = d3.scaleLinear()\n        .domain([0, props.dataParams.steps - 1])\n        .range([stripheight, props.margin.top]);\n\n      const xScale = d3.scaleBand()\n        .domain(data.map(d => dateParse(d[props.dataParams.date])))\n        .range([props.margin.left, width - props.margin.right])\n        .padding(0);\n\n      const colorDomain = props.stripColor ? (Object.keys(props.stripColor)).map(d => +d) : d3.extent(data.map(d => d[props.dataParams.index]));\n\n      const colorRange = props.stripColor ? colorDomain.map(d => props.stripColor[`${d}`]) : ['#cccccc', '#333333'];\n\n      const colorScale = d3.scaleLinear()\n        .domain(colorDomain)\n        .range(colorRange)\n        .interpolate(interpolateHcl);\n\n      // make bars\n      const bars = chartDiv.appendSelect('div.bars-container')\n        .styles({\n          display: 'flex',\n          'align-items': `${props.valign}`,\n        })\n        .selectAll('.bar')\n        .data(data, (d, i) => d[props.dataParams.date]); // for smooth data updation\n\n      bars.enter().append('div')\n        .attr('class', d => `bar ${d[props.dataParams.date]}`)\n        .style('display', 'inline-block')\n        .style('height', d => {\n          const stepSize = (stripheight) / props.dataParams.steps;\n          const step = d[props.dataParams.stepValue] + 1;\n          return d[props.dataParams.index] ? (step ? step * stepSize + 'px' : stepSize + 'px') : stepSize + 'px';\n        })\n        .style('width', xScale.bandwidth() + 'px')\n        .style('background', d => {\n          const val = parseFloat(d[props.dataParams.index]);\n          return (val !== null) && !(isNaN(val)) ? colorScale(val) : props.baseColor;\n        })\n        .merge(bars)\n        .transition(transition)\n        .style('display', 'inline-block')\n        .style('height', d => {\n          const stepSize = (stripheight) / props.dataParams.steps;\n          const step = d[props.dataParams.stepValue] + 1;\n          return d[props.dataParams.index] ? (step ? step * stepSize + 'px' : stepSize + 'px') : stepSize + 'px';\n        })\n        .style('width', xScale.bandwidth() + 'px')\n        .style('background', d => {\n          const val = parseFloat(d[props.dataParams.index]);\n          return (val !== null) && !(isNaN(val)) ? colorScale(val) : props.baseColor;\n        });\n\n      bars.exit()\n        .transition(transition)\n        .attr('height', 0)\n        .remove();\n\n      if (props.legendItems) {\n        const indexLegendItems = [];\n        (Object.keys(props.legendItems.indexLegend)).forEach(d => {\n          const item = {\n            key: d,\n            value: props.legendItems.indexLegend[d],\n          };\n          indexLegendItems.push(item);\n        });\n        if (props.legendItems.null) {\n          indexLegendItems.push({\n            key: 'null',\n            value: props.legendItems.null,\n          });\n        }\n        const legendWidth = (width - props.margin.right - props.margin.left) / indexLegendItems.length;\n\n        // make legend\n        const legendDiv = chartDiv.appendSelect('div.legend-container');\n\n        const indexLegend = legendDiv.appendSelect('div.legend.indexLegend')\n        // .style('align-items', `${props.valign}`)\n          .selectAll('.legend-item')\n          .data(indexLegendItems); // for smooth data updation\n\n        indexLegend.enter().append('div')\n          .attr('class', 'legend-item')\n          .styles({\n            display: 'flex',\n            'align-items': 'start',\n          })\n        // .style('width', `${legendWidth}px`)\n          .html(d => {\n            const color = (+d.key !== null) && !(isNaN(+d.key)) ? props.stripColor[+d.key] : props.baseColor;\n            return `<span style=\"width:1rem; height:1rem;min-width:1rem; min-height:1rem; background: ${color}\"></span> <p style=\"margin:0 0 0 0.5rem;\">${d.value}</p>`;\n          })\n          .merge(indexLegend)\n          .styles({\n            display: 'flex',\n            'align-items': 'start',\n          })\n          .style('width', `${legendWidth}px`)\n          .html(d => {\n            const color = (+d.key !== null) && !(isNaN(+d.key)) ? props.stripColor[+d.key] : props.baseColor;\n            return `<span style=\"width:1rem; height:1rem;min-width:1rem; min-height:1rem; background: ${color}\"></span> <p style=\"margin:0 0 0 0.5rem;\">${d.value}</p>`;\n          });\n\n        indexLegend.exit()\n          .transition(transition)\n          .remove();\n\n        if (props.legendItems.stepLegend) {\n          // step legend stuff\n          const stepLegendItems = [];\n          (Object.keys(props.legendItems.stepLegend)).forEach(d => {\n            const item = {\n              key: d,\n              value: props.legendItems.stepLegend[d],\n            };\n            stepLegendItems.push(item);\n          });\n          console.log(stepLegendItems);\n\n          const stepLegend = legendDiv.appendSelect('div.legend.stepLegend')\n            .selectAll('.legend-item')\n            .data(stepLegendItems); // for smooth data updation\n\n          stepLegend.enter().append('div')\n            .attr('class', 'legend-item')\n            .styles({\n              display: 'flex',\n              'align-items': 'center',\n            })\n            .html((d, i) => {\n              const stepSize = (stripheight) / stepLegendItems.length;\n              return `<span style=\"width:${8}px; height:${((+d.key) + 1) * stepSize}px; background:transparent; border: 0.5px solid #333333;\"></span><p style=\"margin:0 0 0 0.5rem;\">${d.value}</p>`;\n            })\n            .merge(stepLegend)\n            .styles({\n              display: 'flex',\n              'align-items': 'center',\n            })\n            .html((d, i) => {\n              const stepSize = (stripheight) / stepLegendItems.length;\n              return `<span style=\"width:${8}px; height:${((+d.key) + 1) * stepSize}px; background:transparent; border: 0.5px solid #333333;\"></span><p style=\"margin:0 0 0 0.5rem;\">${d.value}</p>`;\n            });\n\n          stepLegend.exit()\n            .transition(transition)\n            .remove();\n        }\n      }\n      return this;\n    }\n}\n// console.log(this.defaultProps);\nexport default CountryLockdownIndicatorStrips;\n"]},"metadata":{},"sourceType":"module"}