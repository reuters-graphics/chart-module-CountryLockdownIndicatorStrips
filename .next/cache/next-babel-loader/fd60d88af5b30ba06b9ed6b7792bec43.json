{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ErrorDataType, ErrorDrawMethodUndefined, ErrorPropsType, ErrorSelectorType } from './errorClasses';\nimport d3 from '../utils/d3';\nimport merge from 'lodash/merge';\n\nclass ChartComponent {\n  constructor(selector, props, data) {\n    _defineProperty(this, \"defaultProps\", {});\n\n    _defineProperty(this, \"defaultData\", []);\n\n    this.selection(selector);\n    this.props(props);\n    this.data(data);\n  }\n  /**\n   * Getter/setter for DOM node chart is drawn into\n   * @param  {String or Element} selector\n   */\n\n\n  selection(selector) {\n    if (!selector) return this._selection;\n\n    if (!(selector instanceof Element) && typeof selector !== 'string') {\n      throw new ErrorSelectorType(this.constructor.name);\n    }\n\n    this._selection = d3.select(selector);\n    return this;\n  }\n  /**\n   * Default props\n   * @type {Object}\n   */\n\n\n  /**\n   * Getter/setter for props object\n   * @param  {Object} obj props\n   */\n  props(obj) {\n    if (!obj) return this._props || this.defaultProps;\n\n    if (!(obj instanceof Object)) {\n      throw new ErrorPropsType(this.constructor.name);\n    }\n\n    this._props = merge(this._props || this.defaultProps, obj);\n    return this;\n  }\n  /**\n   * Default data\n   * @type {Array}\n   */\n\n\n  /**\n   * Getter/setter for chart data\n   * @param  {Array} arr data\n   */\n  data(arr) {\n    if (!arr) return this._data || this.defaultData;\n\n    if (!(arr instanceof Array)) {\n      throw new ErrorDataType(this.constructor.name);\n    }\n\n    this._data = arr;\n    return this;\n  }\n\n  draw() {\n    throw new ErrorDrawMethodUndefined(this.constructor.name);\n  }\n\n}\n\nexport default ChartComponent;","map":null,"metadata":{},"sourceType":"module"}