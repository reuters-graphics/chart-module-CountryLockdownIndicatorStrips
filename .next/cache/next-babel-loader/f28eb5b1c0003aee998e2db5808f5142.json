{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/prasanta/ReutersWork/INTERACTIVES/COVID-APP/chart-module-countryScatterplot/src/demo/Chart.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Chart from '../lib/chart.js';\nimport ChartContainer from './furniture/ChartContainer';\nimport React from 'react';\nimport { base } from '@reuters-graphics/style-color/dist/categorical';\nimport debounce from 'lodash/debounce';\nvar newDataRead;\nd3.json('http://graphics.thomsonreuters.com/data/2020/coronavirus/oxford-covid-stringency-tracker/asia/latest_data.json').then(function (newdata) {\n  newDataRead = newdata;\n});\n\nvar ChartComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  var _super = _createSuper(ChartComponent);\n\n  function ChartComponent() {\n    var _this;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      width: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"chartContainer\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"chart\", new Chart());\n\n    _defineProperty(_assertThisInitialized(_this), \"resize\", debounce(function () {\n      _this.chart.draw();\n    }, 250));\n\n    return _this;\n  }\n\n  _createClass(ChartComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Use our chart module.\n      this.chart.selection(this.chartContainer.current).props({\n        fill: base.blue.hex\n      }).draw(); // Use it again.\n\n      setTimeout(function () {\n        _this2.chart.data([20, 34, 48, 60]).props({\n          fill: base.orange.hex\n        }).draw();\n      }, 1000);\n      setTimeout(function () {\n        _this2.chart.data([30, 50, 30]).props({\n          fill: base.blue.hex\n        }).draw();\n      }, 2000); // Add a listener to resize chart with the window.\n\n      window.addEventListener('resize', this.resize);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Remove listener if the component is removed, too.\n      window.removeEventListener('resize', this.resize);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // Update the chart with the component.\n      // Can change data or props here, whatever...\n      this.chart.draw();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var width = this.state.width;\n      return __jsx(ChartContainer, {\n        width: width,\n        setWidth: function setWidth(width) {\n          return _this3.setState({\n            width: width\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        id: \"chart\",\n        ref: this.chartContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ChartComponent;\n}(React.Component);\n\nexport default ChartComponent;","map":{"version":3,"sources":["/Users/prasanta/ReutersWork/INTERACTIVES/COVID-APP/chart-module-countryScatterplot/src/demo/Chart.js"],"names":["Chart","ChartContainer","React","base","debounce","newDataRead","d3","json","then","newdata","ChartComponent","width","createRef","chart","draw","selection","chartContainer","current","props","fill","blue","hex","setTimeout","data","orange","window","addEventListener","resize","removeEventListener","state","setState","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,gDAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,IAAIC,WAAJ;AACAC,EAAE,CAACC,IAAH,CAAQ,gHAAR,EACOC,IADP,CACY,UAASC,OAAT,EAAiB;AACrBJ,EAAAA,WAAW,GAAGI,OAAd;AACD,CAHP;;IAKMC,c;;;;;;;;;;;;;;;;4DACI;AAAEC,MAAAA,KAAK,EAAE;AAAT,K;;qEACST,KAAK,CAACU,SAAN,E;;4DAGT,IAAIZ,KAAJ,E;;6DAGCI,QAAQ,CAAC,YAAM;AAAE,YAAKS,KAAL,CAAWC,IAAX;AAAoB,KAA7B,EAA+B,GAA/B,C;;;;;;;wCAEG;AAAA;;AAClB;AACA,WAAKD,KAAL,CACGE,SADH,CACa,KAAKC,cAAL,CAAoBC,OADjC,EAEGC,KAFH,CAES;AAAEC,QAAAA,IAAI,EAAEhB,IAAI,CAACiB,IAAL,CAAUC;AAAlB,OAFT,EAGGP,IAHH,GAFkB,CAOlB;;AACAQ,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAACT,KAAL,CACGU,IADH,CACQ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CADR,EAEGL,KAFH,CAES;AAAEC,UAAAA,IAAI,EAAEhB,IAAI,CAACqB,MAAL,CAAYH;AAApB,SAFT,EAGGP,IAHH;AAID,OALS,EAKP,IALO,CAAV;AAMAQ,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAACT,KAAL,CACGU,IADH,CACQ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADR,EAEGL,KAFH,CAES;AAAEC,UAAAA,IAAI,EAAEhB,IAAI,CAACiB,IAAL,CAAUC;AAAlB,SAFT,EAGGP,IAHH;AAID,OALS,EAKP,IALO,CAAV,CAdkB,CAqBlB;;AACAW,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,MAAvC;AACD;;;2CAEsB;AACrB;AACAF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKD,MAA1C;AACD;;;yCAEoB;AACnB;AACA;AACA,WAAKd,KAAL,CAAWC,IAAX;AACD;;;6BAEQ;AAAA;;AAAA,UACCH,KADD,GACW,KAAKkB,KADhB,CACClB,KADD;AAEP,aACE,MAAC,cAAD;AAAgB,QAAA,KAAK,EAAEA,KAAvB;AAA8B,QAAA,QAAQ,EAAE,kBAACA,KAAD;AAAA,iBAAW,MAAI,CAACmB,QAAL,CAAc;AAAEnB,YAAAA,KAAK,EAALA;AAAF,WAAd,CAAX;AAAA,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,EAAE,EAAC,OAAR;AAAgB,QAAA,GAAG,EAAE,KAAKK,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAtD0Bd,KAAK,CAAC6B,S;;AAyDnC,eAAerB,cAAf","sourcesContent":["import Chart from '../lib/chart.js';\nimport ChartContainer from './furniture/ChartContainer';\nimport React from 'react';\nimport { base } from '@reuters-graphics/style-color/dist/categorical';\nimport debounce from 'lodash/debounce';\n\nlet newDataRead\nd3.json('http://graphics.thomsonreuters.com/data/2020/coronavirus/oxford-covid-stringency-tracker/asia/latest_data.json')\n      .then(function(newdata){\n        newDataRead = newdata\n      })\n\nclass ChartComponent extends React.Component {\n  state = { width: '' };\n  chartContainer = React.createRef();\n\n  // Instantiate and add our chart class to this component.\n  chart = new Chart();\n\n  // A resize function to redraw the chart.\n  resize = debounce(() => { this.chart.draw(); }, 250);\n\n  componentDidMount() {\n    // Use our chart module.\n    this.chart\n      .selection(this.chartContainer.current)\n      .props({ fill: base.blue.hex })\n      .draw();\n\n    // Use it again.\n    setTimeout(() => {\n      this.chart\n        .data([20, 34, 48, 60])\n        .props({ fill: base.orange.hex })\n        .draw();\n    }, 1000);\n    setTimeout(() => {\n      this.chart\n        .data([30, 50, 30])\n        .props({ fill: base.blue.hex })\n        .draw();\n    }, 2000);\n\n    // Add a listener to resize chart with the window.\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    // Remove listener if the component is removed, too.\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    // Update the chart with the component.\n    // Can change data or props here, whatever...\n    this.chart.draw();\n  }\n\n  render() {\n    const { width } = this.state;\n    return (\n      <ChartContainer width={width} setWidth={(width) => this.setState({ width })}>\n        {/* This is our chart container ðŸ‘‡ */}\n        <div id='chart' ref={this.chartContainer} />\n      </ChartContainer>\n    );\n  }\n}\n\nexport default ChartComponent;\n"]},"metadata":{},"sourceType":"module"}