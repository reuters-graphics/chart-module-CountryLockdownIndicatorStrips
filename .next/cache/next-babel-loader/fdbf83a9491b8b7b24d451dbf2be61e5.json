{"ast":null,"code":"var _jsxFileName = \"/Users/prasanta/ReutersWork/INTERACTIVES/COVID-APP/chart-module-countryScatterplot/src/demo/Chart.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Chart from '../lib/chart.js';\nimport ChartContainer from './furniture/ChartContainer';\nimport React from 'react';\nimport { base } from '@reuters-graphics/style-color/dist/categorical';\nimport debounce from 'lodash/debounce';\nimport d3 from '../utils/d3';\nlet newDataRead;\nd3.json('http://graphics.thomsonreuters.com/data/2020/coronavirus/oxford-covid-stringency-tracker/india/data.json').then(function (newdata) {\n  newDataRead = newdata;\n});\n\nclass ChartComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      width: ''\n    });\n\n    _defineProperty(this, \"chartContainer\", React.createRef());\n\n    _defineProperty(this, \"chart\", new Chart());\n\n    _defineProperty(this, \"resize\", debounce(() => {\n      this.chart.draw();\n    }, 250));\n  }\n\n  componentDidMount() {\n    // Use our chart module.\n    this.chart.selection(this.chartContainer.current).props({\n      fill: base.blue.hex\n    }).draw(); // Use it again.\n\n    setTimeout(() => {\n      this.chart.data([20, 34, 48, 60]).props({\n        fill: base.orange.hex\n      }).draw();\n    }, 1000);\n    setTimeout(() => {\n      this.chart.data([30, 50, 30]).props({\n        fill: base.blue.hex\n      }).draw();\n    }, 2000); // Add a listener to resize chart with the window.\n\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    // Remove listener if the component is removed, too.\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    // Update the chart with the component.\n    // Can change data or props here, whatever...\n    this.chart.draw();\n  }\n\n  render() {\n    const {\n      width\n    } = this.state;\n    return __jsx(ChartContainer, {\n      width: width,\n      setWidth: width => this.setState({\n        width\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      id: \"chart\",\n      ref: this.chartContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default ChartComponent;","map":{"version":3,"sources":["/Users/prasanta/ReutersWork/INTERACTIVES/COVID-APP/chart-module-countryScatterplot/src/demo/Chart.js"],"names":["Chart","ChartContainer","React","base","debounce","d3","newDataRead","json","then","newdata","ChartComponent","Component","width","createRef","chart","draw","componentDidMount","selection","chartContainer","current","props","fill","blue","hex","setTimeout","data","orange","window","addEventListener","resize","componentWillUnmount","removeEventListener","componentDidUpdate","render","state","setState"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,gDAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,IAAIC,WAAJ;AACAD,EAAE,CAACE,IAAH,CAAQ,0GAAR,EACOC,IADP,CACY,UAASC,OAAT,EAAiB;AACrBH,EAAAA,WAAW,GAAGG,OAAd;AACD,CAHP;;AAKA,MAAMC,cAAN,SAA6BR,KAAK,CAACS,SAAnC,CAA6C;AAAA;AAAA;;AAAA,mCACnC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADmC;;AAAA,4CAE1BV,KAAK,CAACW,SAAN,EAF0B;;AAAA,mCAKnC,IAAIb,KAAJ,EALmC;;AAAA,oCAQlCI,QAAQ,CAAC,MAAM;AAAE,WAAKU,KAAL,CAAWC,IAAX;AAAoB,KAA7B,EAA+B,GAA/B,CAR0B;AAAA;;AAU3CC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKF,KAAL,CACGG,SADH,CACa,KAAKC,cAAL,CAAoBC,OADjC,EAEGC,KAFH,CAES;AAAEC,MAAAA,IAAI,EAAElB,IAAI,CAACmB,IAAL,CAAUC;AAAlB,KAFT,EAGGR,IAHH,GAFkB,CAOlB;;AACAS,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKV,KAAL,CACGW,IADH,CACQ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CADR,EAEGL,KAFH,CAES;AAAEC,QAAAA,IAAI,EAAElB,IAAI,CAACuB,MAAL,CAAYH;AAApB,OAFT,EAGGR,IAHH;AAID,KALS,EAKP,IALO,CAAV;AAMAS,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKV,KAAL,CACGW,IADH,CACQ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADR,EAEGL,KAFH,CAES;AAAEC,QAAAA,IAAI,EAAElB,IAAI,CAACmB,IAAL,CAAUC;AAAlB,OAFT,EAGGR,IAHH;AAID,KALS,EAKP,IALO,CAAV,CAdkB,CAqBlB;;AACAY,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,MAAvC;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB;AACAH,IAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqC,KAAKF,MAA1C;AACD;;AAEDG,EAAAA,kBAAkB,GAAG;AACnB;AACA;AACA,SAAKlB,KAAL,CAAWC,IAAX;AACD;;AAEDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA;AAAF,QAAY,KAAKsB,KAAvB;AACA,WACE,MAAC,cAAD;AAAgB,MAAA,KAAK,EAAEtB,KAAvB;AAA8B,MAAA,QAAQ,EAAGA,KAAD,IAAW,KAAKuB,QAAL,CAAc;AAAEvB,QAAAA;AAAF,OAAd,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAgB,MAAA,GAAG,EAAE,KAAKM,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAtD0C;;AAyD7C,eAAeR,cAAf","sourcesContent":["import Chart from '../lib/chart.js';\nimport ChartContainer from './furniture/ChartContainer';\nimport React from 'react';\nimport { base } from '@reuters-graphics/style-color/dist/categorical';\nimport debounce from 'lodash/debounce';\nimport d3 from '../utils/d3';\nlet newDataRead\nd3.json('http://graphics.thomsonreuters.com/data/2020/coronavirus/oxford-covid-stringency-tracker/india/data.json')\n      .then(function(newdata){\n        newDataRead = newdata\n      })\n\nclass ChartComponent extends React.Component {\n  state = { width: '' };\n  chartContainer = React.createRef();\n\n  // Instantiate and add our chart class to this component.\n  chart = new Chart();\n\n  // A resize function to redraw the chart.\n  resize = debounce(() => { this.chart.draw(); }, 250);\n\n  componentDidMount() {\n    // Use our chart module.\n    this.chart\n      .selection(this.chartContainer.current)\n      .props({ fill: base.blue.hex })\n      .draw();\n\n    // Use it again.\n    setTimeout(() => {\n      this.chart\n        .data([20, 34, 48, 60])\n        .props({ fill: base.orange.hex })\n        .draw();\n    }, 1000);\n    setTimeout(() => {\n      this.chart\n        .data([30, 50, 30])\n        .props({ fill: base.blue.hex })\n        .draw();\n    }, 2000);\n\n    // Add a listener to resize chart with the window.\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    // Remove listener if the component is removed, too.\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    // Update the chart with the component.\n    // Can change data or props here, whatever...\n    this.chart.draw();\n  }\n\n  render() {\n    const { width } = this.state;\n    return (\n      <ChartContainer width={width} setWidth={(width) => this.setState({ width })}>\n        {/* This is our chart container ðŸ‘‡ */}\n        <div id='chart' ref={this.chartContainer} />\n      </ChartContainer>\n    );\n  }\n}\n\nexport default ChartComponent;\n"]},"metadata":{},"sourceType":"module"}