{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/prasanta/ReutersWork/INTERACTIVES/COVID-APP/chart-module-CountryLockdownIndicatorStrips/src/demo/Chart.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Chart from '../lib/chart.js';\nimport ChartContainer from './furniture/ChartContainer';\nimport React from 'react';\nimport { base } from '@reuters-graphics/style-color/dist/categorical';\nimport debounce from 'lodash/debounce';\nimport WeeklyAverage from '@reuters-graphics/chart-module-weeklyaverage';\nvar myChart = new WeeklyAverage();\n\nvar ChartComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  var _super = _createSuper(ChartComponent);\n\n  function ChartComponent() {\n    var _this;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      width: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"chartContainer\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"chart\", new Chart());\n\n    _defineProperty(_assertThisInitialized(_this), \"resize\", debounce(function () {\n      _this.chart.draw();\n    }, 250));\n\n    return _this;\n  }\n\n  _createClass(ChartComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Use our chart module.\n      this.chart.selection(this.chartContainer.current) // .props({ fill: base.blue.hex })\n      // .data()\n      .draw(); // // Use it again.\n      // setTimeout(() => {\n      //   this.chart\n      //     // .data([20, 34, 48, 60])\n      //     .props({ fill: base.orange.hex })\n      //     .draw();\n      // }, 1000);\n      // setTimeout(() => {\n      //   this.chart\n      //     // .data([30, 50, 30])\n      //     .props({ fill: base.blue.hex })\n      //     .draw();\n      // }, 2000);\n      // Add a listener to resize chart with the window.\n\n      window.addEventListener('resize', this.resize);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Remove listener if the component is removed, too.\n      window.removeEventListener('resize', this.resize);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // Update the chart with the component.\n      // Can change data or props here, whatever...\n      this.chart.draw();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var width = this.state.width;\n      return __jsx(ChartContainer, {\n        width: width,\n        setWidth: function setWidth(width) {\n          return _this2.setState({\n            width: width\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 18\n        }\n      }, \" \", __jsx(\"div\", {\n        id: \"chart\",\n        ref: this.chartContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 54\n        }\n      }), \"  \");\n    }\n  }]);\n\n  return ChartComponent;\n}(React.Component);\n\nexport default ChartComponent;","map":{"version":3,"sources":["/Users/prasanta/ReutersWork/INTERACTIVES/COVID-APP/chart-module-CountryLockdownIndicatorStrips/src/demo/Chart.js"],"names":["Chart","ChartContainer","React","base","debounce","WeeklyAverage","myChart","ChartComponent","width","createRef","chart","draw","selection","chartContainer","current","window","addEventListener","resize","removeEventListener","state","setState","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,gDAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAOC,aAAP,MAA0B,8CAA1B;AAEA,IAAMC,OAAO,GAAG,IAAID,aAAJ,EAAhB;;IAEME,c;;;;;;;;;;;;;;;;4DACM;AAAEC,MAAAA,KAAK,EAAE;AAAT,K;;qEACSN,KAAK,CAACO,SAAN,E;;4DAGT,IAAIT,KAAJ,E;;6DAGCI,QAAQ,CAAC,YAAM;AAAE,YAAKM,KAAL,CAAWC,IAAX;AAAoB,KAA7B,EAA+B,GAA/B,C;;;;;;;wCAEG;AAChB;AACA,WAAKD,KAAL,CACKE,SADL,CACe,KAAKC,cAAL,CAAoBC,OADnC,EAEI;AACA;AAHJ,OAIKH,IAJL,GAFgB,CAQhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAI,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,MAAvC;AACH;;;2CAEsB;AACnB;AACAF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKD,MAA1C;AACH;;;yCAEoB;AACjB;AACA;AACA,WAAKP,KAAL,CAAWC,IAAX;AACH;;;6BAEQ;AAAA;;AAAA,UACGH,KADH,GACa,KAAKW,KADlB,CACGX,KADH;AAEL,aAAS,MAAE,cAAF;AAAiB,QAAA,KAAK,EAAKA,KAA3B;AACL,QAAA,QAAQ,EACJ,kBAACA,KAAD;AAAA,iBAAW,MAAI,CAACY,QAAL,CAAc;AAAEZ,YAAAA,KAAK,EAALA;AAAF,WAAd,CAAX;AAAA,SAFC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAIoC;AAAM,QAAA,EAAE,EAAG,OAAX;AACzC,QAAA,GAAG,EAAK,KAAKK,cAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJpC,OAAT;AASH;;;;EA1DwBX,KAAK,CAACmB,S;;AA6DnC,eAAed,cAAf","sourcesContent":["import Chart from '../lib/chart.js';\nimport ChartContainer from './furniture/ChartContainer';\nimport React from 'react';\nimport { base } from '@reuters-graphics/style-color/dist/categorical';\nimport debounce from 'lodash/debounce';\n\nimport WeeklyAverage from '@reuters-graphics/chart-module-weeklyaverage';\n\nconst myChart = new WeeklyAverage();\n\nclass ChartComponent extends React.Component {\n    state = { width: '' };\n    chartContainer = React.createRef();\n\n    // Instantiate and add our chart class to this component.\n    chart = new Chart();\n\n    // A resize function to redraw the chart.\n    resize = debounce(() => { this.chart.draw(); }, 250);\n\n    componentDidMount() {\n        // Use our chart module.\n        this.chart\n            .selection(this.chartContainer.current)\n            // .props({ fill: base.blue.hex })\n            // .data()\n            .draw();\n\n        // // Use it again.\n        // setTimeout(() => {\n        //   this.chart\n        //     // .data([20, 34, 48, 60])\n        //     .props({ fill: base.orange.hex })\n        //     .draw();\n        // }, 1000);\n        // setTimeout(() => {\n        //   this.chart\n        //     // .data([30, 50, 30])\n        //     .props({ fill: base.blue.hex })\n        //     .draw();\n        // }, 2000);\n\n        // Add a listener to resize chart with the window.\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        // Remove listener if the component is removed, too.\n        window.removeEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate() {\n        // Update the chart with the component.\n        // Can change data or props here, whatever...\n        this.chart.draw();\n    }\n\n    render() {\n        const { width } = this.state;\n        return ( < ChartContainer width = { width }\n            setWidth = {\n                (width) => this.setState({ width })\n            } >\n            { /* This is our chart container ðŸ‘‡ */ } < div id = 'chart'\n            ref = { this.chartContainer }\n            />  <\n            /ChartContainer>\n        );\n    }\n}\n\nexport default ChartComponent;"]},"metadata":{},"sourceType":"module"}