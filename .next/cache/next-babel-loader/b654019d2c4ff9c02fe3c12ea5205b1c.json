{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { ErrorDataType, ErrorDrawMethodUndefined, ErrorPropsType, ErrorSelectorType } from './errorClasses';\nimport d3 from '../utils/d3';\nimport merge from 'lodash/merge';\n\nvar ChartComponent = /*#__PURE__*/function () {\n  function ChartComponent(selector, props, data) {\n    _classCallCheck(this, ChartComponent);\n\n    _defineProperty(this, \"defaultProps\", {});\n\n    _defineProperty(this, \"defaultData\", []);\n\n    this.selection(selector);\n    this.props(props);\n    this.data(data);\n  }\n  /**\n   * Getter/setter for DOM node chart is drawn into\n   * @param  {String or Element} selector\n   */\n\n\n  _createClass(ChartComponent, [{\n    key: \"selection\",\n    value: function selection(selector) {\n      if (!selector) return this._selection;\n\n      if (!(selector instanceof Element) && typeof selector !== 'string') {\n        throw new ErrorSelectorType(this.constructor.name);\n      }\n\n      this._selection = d3.select(selector);\n      return this;\n    }\n    /**\n     * Default props\n     * @type {Object}\n     */\n\n  }, {\n    key: \"props\",\n\n    /**\n     * Getter/setter for props object\n     * @param  {Object} obj props\n     */\n    value: function props(obj) {\n      if (!obj) return this._props || this.defaultProps;\n\n      if (!(obj instanceof Object)) {\n        throw new ErrorPropsType(this.constructor.name);\n      }\n\n      this._props = merge(this._props || this.defaultProps, obj);\n      return this;\n    }\n    /**\n     * Default data\n     * @type {Array}\n     */\n\n  }, {\n    key: \"data\",\n\n    /**\n     * Getter/setter for chart data\n     * @param  {Array} arr data\n     */\n    value: function data(arr) {\n      if (!arr) return this._data || this.defaultData;\n\n      if (!(arr instanceof Array)) {\n        throw new ErrorDataType(this.constructor.name);\n      }\n\n      this._data = arr;\n      return this;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      throw new ErrorDrawMethodUndefined(this.constructor.name);\n    }\n  }]);\n\n  return ChartComponent;\n}();\n\nexport default ChartComponent;","map":{"version":3,"sources":["/Users/u6068973/Documents/work/coronavirus/tracker-news-app/chart-module-CountryLockdownIndicatorStrips/src/lib/base/ChartComponent.js"],"names":["ErrorDataType","ErrorDrawMethodUndefined","ErrorPropsType","ErrorSelectorType","d3","merge","ChartComponent","selector","props","data","selection","_selection","Element","constructor","name","select","obj","_props","defaultProps","Object","arr","_data","defaultData","Array"],"mappings":";;;AAAA,SACEA,aADF,EAEEC,wBAFF,EAGEC,cAHF,EAIEC,iBAJF,QAKO,gBALP;AAOA,OAAOC,EAAP,MAAe,aAAf;AACA,OAAOC,KAAP,MAAkB,cAAlB;;IAEMC,c;AACJ,0BAAYC,QAAZ,EAAsBC,KAAtB,EAA6BC,IAA7B,EAAmC;AAAA;;AAAA,0CAyBpB,EAzBoB;;AAAA,yCA8CrB,EA9CqB;;AACjC,SAAKC,SAAL,CAAeH,QAAf;AACA,SAAKC,KAAL,CAAWA,KAAX;AACA,SAAKC,IAAL,CAAUA,IAAV;AACD;AAED;;;;;;;;8BAIUF,Q,EAAU;AAClB,UAAI,CAACA,QAAL,EAAe,OAAO,KAAKI,UAAZ;;AAEf,UAAI,EAAEJ,QAAQ,YAAYK,OAAtB,KAAkC,OAAOL,QAAP,KAAoB,QAA1D,EAAoE;AAClE,cAAM,IAAIJ,iBAAJ,CAAsB,KAAKU,WAAL,CAAiBC,IAAvC,CAAN;AACD;;AAED,WAAKH,UAAL,GAAkBP,EAAE,CAACW,MAAH,CAAUR,QAAV,CAAlB;AACA,aAAO,IAAP;AACD;AAED;;;;;;;;AAMA;;;;0BAIMS,G,EAAK;AACT,UAAI,CAACA,GAAL,EAAU,OAAO,KAAKC,MAAL,IAAe,KAAKC,YAA3B;;AAEV,UAAI,EAAEF,GAAG,YAAYG,MAAjB,CAAJ,EAA8B;AAC5B,cAAM,IAAIjB,cAAJ,CAAmB,KAAKW,WAAL,CAAiBC,IAApC,CAAN;AACD;;AAED,WAAKG,MAAL,GAAcZ,KAAK,CAAC,KAAKY,MAAL,IAAe,KAAKC,YAArB,EAAmCF,GAAnC,CAAnB;AACA,aAAO,IAAP;AACD;AAED;;;;;;;;AAMA;;;;yBAIKI,G,EAAK;AACR,UAAI,CAACA,GAAL,EAAU,OAAO,KAAKC,KAAL,IAAc,KAAKC,WAA1B;;AAEV,UAAI,EAAEF,GAAG,YAAYG,KAAjB,CAAJ,EAA6B;AAC3B,cAAM,IAAIvB,aAAJ,CAAkB,KAAKa,WAAL,CAAiBC,IAAnC,CAAN;AACD;;AAED,WAAKO,KAAL,GAAaD,GAAb;AACA,aAAO,IAAP;AACD;;;2BAEM;AACL,YAAM,IAAInB,wBAAJ,CAA6B,KAAKY,WAAL,CAAiBC,IAA9C,CAAN;AACD;;;;;;AAGH,eAAeR,cAAf","sourcesContent":["import {\n  ErrorDataType,\n  ErrorDrawMethodUndefined,\n  ErrorPropsType,\n  ErrorSelectorType\n} from './errorClasses';\n\nimport d3 from '../utils/d3';\nimport merge from 'lodash/merge';\n\nclass ChartComponent {\n  constructor(selector, props, data) {\n    this.selection(selector);\n    this.props(props);\n    this.data(data);\n  }\n\n  /**\n   * Getter/setter for DOM node chart is drawn into\n   * @param  {String or Element} selector\n   */\n  selection(selector) {\n    if (!selector) return this._selection;\n\n    if (!(selector instanceof Element) && typeof selector !== 'string') {\n      throw new ErrorSelectorType(this.constructor.name);\n    }\n\n    this._selection = d3.select(selector);\n    return this;\n  }\n\n  /**\n   * Default props\n   * @type {Object}\n   */\n  defaultProps = {}\n\n  /**\n   * Getter/setter for props object\n   * @param  {Object} obj props\n   */\n  props(obj) {\n    if (!obj) return this._props || this.defaultProps;\n\n    if (!(obj instanceof Object)) {\n      throw new ErrorPropsType(this.constructor.name);\n    }\n\n    this._props = merge(this._props || this.defaultProps, obj);\n    return this;\n  }\n\n  /**\n   * Default data\n   * @type {Array}\n   */\n  defaultData = []\n\n  /**\n   * Getter/setter for chart data\n   * @param  {Array} arr data\n   */\n  data(arr) {\n    if (!arr) return this._data || this.defaultData;\n\n    if (!(arr instanceof Array)) {\n      throw new ErrorDataType(this.constructor.name);\n    }\n\n    this._data = arr;\n    return this;\n  }\n\n  draw() {\n    throw new ErrorDrawMethodUndefined(this.constructor.name);\n  }\n}\n\nexport default ChartComponent;\n"]},"metadata":{},"sourceType":"module"}