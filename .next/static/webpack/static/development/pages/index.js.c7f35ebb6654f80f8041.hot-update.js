webpackHotUpdate("static/development/pages/index.js",{

/***/ "./src/lib/chart.js":
/*!**************************!*\
  !*** ./src/lib/chart.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _base_ChartComponent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./base/ChartComponent */ \"./src/lib/base/ChartComponent.js\");\n/* harmony import */ var _utils_d3__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/d3 */ \"./src/lib/utils/d3.js\");\n/* harmony import */ var _defaultData_json__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./defaultData.json */ \"./src/lib/defaultData.json\");\nvar _defaultData_json__WEBPACK_IMPORTED_MODULE_9___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./defaultData.json */ \"./src/lib/defaultData.json\", 1);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! d3 */ \"./node_modules/d3/index.js\");\n/* harmony import */ var d3_selection_multi__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! d3-selection-multi */ \"./node_modules/d3-selection-multi/index.js\");\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n // see docs on https://github.com/reuters-graphics/graphics-atlas-client\n// import AtlasMetadataClient from '@reuters-graphics/graphics-atlas-client';\n// const atlastClient = new AtlasMetadataClient();\n\nvar dateParse = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].timeParse('%Y-%m-%d');\nvar dateFormat = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].timeFormat('%b %e');\nvar dateFormat_tt = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].timeFormat('%B %e');\nvar numberFormat_tt = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].format(',');\n\nvar CountryLockdownIndicatorStrips = /*#__PURE__*/function (_ChartComponent) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(CountryLockdownIndicatorStrips, _ChartComponent);\n\n  var _super = _createSuper(CountryLockdownIndicatorStrips);\n\n  function CountryLockdownIndicatorStrips() {\n    var _this;\n\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, CountryLockdownIndicatorStrips);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"defaultProps\", {\n      dataParams: {\n        date: 'date',\n        index: 'c1',\n        steps: 2,\n        // stepValue = 0, 1...\n        stepValue: 'flag'\n      },\n      height: 250,\n      margin: {\n        top: 10,\n        right: 10,\n        bottom: 10,\n        left: 10\n      },\n      valign: 'center',\n      // start, center, baseline\n      baseColor: '#ECEFF4',\n      stripColor: {\n        // should be numeric values that are mapped from the data\n        0: '#d1eeea',\n        1: '#ffe47f',\n        2: 'orange',\n        3: '#a50f15'\n      },\n      legendItems: {\n        // should contain items from stripColor\n        'null': 'no data',\n        'stepLegend': {\n          0: 'targeted',\n          1: 'nationwide'\n        },\n        'indexLegend': {\n          0: 'no measures',\n          1: 'recommend closing',\n          2: 'require closing (only some levels or categories, eg just high school, or just public schools)',\n          3: 'require closing all levels'\n        }\n      }\n    });\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"defaultData\", _defaultData_json__WEBPACK_IMPORTED_MODULE_9__);\n\n    return _this;\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(CountryLockdownIndicatorStrips, [{\n    key: \"draw\",\n    value: function draw() {\n      var data = this.data();\n      var props = this.props();\n      var node = this.selection().node(); // get country details from AtlasClient from ISO-2\n      // props.country = atlastClient.getCountry(props.countryISO2);\n\n      var _node$getBoundingClie = node.getBoundingClientRect(),\n          width = _node$getBoundingClie.width;\n\n      var transition = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].transition().duration(750); // main chart container\n\n      var chartDiv = this.selection().appendSelect('div') // see docs in ./utils/d3.js\n      .attr('class', \"CountryLockdownIndicatorStrips\").style('width', \"\".concat(width, \"px\")).style('height', \"auto\").appendSelect('div').styles({\n        'margin-top': \"\".concat(props.margin.top, \"px\")\n      }); // .style('transform', `translate(${props.margin.left}px, ${props.margin.top}px)`);\n      // set scales\n\n      var yScale = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].scaleLinear().domain([0, props.dataParams.steps - 1]).range([props.height - props.margin.bottom, props.margin.top]);\n      var xScale = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].scaleBand().domain(data.map(function (d) {\n        return dateParse(d[props.dataParams.date]);\n      })).range([props.margin.left, width - props.margin.right]).padding(0);\n      var colorDomain = props.stripColor ? Object.keys(props.stripColor).map(function (d) {\n        return +d;\n      }) : _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].extent(data.map(function (d) {\n        return d[props.dataParams.index];\n      }));\n      var colorRange = props.stripColor ? colorDomain.map(function (d) {\n        return props.stripColor[\"\".concat(d)];\n      }) : ['#cccccc', '#333333'];\n      var colorScale = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].scaleLinear().domain(colorDomain).range(colorRange).interpolate(d3__WEBPACK_IMPORTED_MODULE_10__[\"interpolateHcl\"]); // make bars\n\n      var bars = chartDiv.appendSelect('div.bars-container').style('display', 'flex').style('align-items', \"\".concat(props.valign)).selectAll('.bar').data(data, function (d, i) {\n        return d[props.dataParams.date];\n      }); // for smooth data updation\n\n      var stripheight = props.legendItems ? (props.height - props.margin.top - props.margin.bottom) * 0.2 : props.height - props.margin.top - props.margin.bottom;\n      bars.enter().append('div').attr('class', function (d) {\n        return \"bar \".concat(d[props.dataParams.date]);\n      }).style('display', 'inline-block').style('height', function (d) {\n        var stepSize = stripheight / props.dataParams.steps;\n        var step = d[props.dataParams.stepValue] + 1;\n        return d[props.dataParams.index] ? step ? step * stepSize + 'px' : stepSize + 'px' : stepSize + 'px';\n      }).style('width', xScale.bandwidth() + 'px').style('background', function (d) {\n        var val = parseFloat(d[props.dataParams.index]);\n        return val !== null && !isNaN(val) ? colorScale(val) : props.baseColor;\n      }).merge(bars).transition(transition).style('display', 'inline-block').style('height', function (d) {\n        var stepSize = stripheight / props.dataParams.steps;\n        var step = d[props.dataParams.stepValue] + 1;\n        return d[props.dataParams.index] ? step ? step * stepSize + 'px' : stepSize + 'px' : stepSize + 'px';\n      }).style('width', xScale.bandwidth() + 'px').style('background', function (d) {\n        var val = parseFloat(d[props.dataParams.index]);\n        return val !== null && !isNaN(val) ? colorScale(val) : props.baseColor;\n      });\n      bars.exit().transition(transition).attr('height', 0).remove();\n\n      if (props.legendItems) {\n        var indexLegendItems = [];\n        Object.keys(props.legendItems.indexLegend).forEach(function (d) {\n          var item = {\n            key: d,\n            value: props.legendItems.indexLegend[d]\n          };\n          indexLegendItems.push(item);\n        });\n\n        if (props.legendItems['null']) {\n          indexLegendItems.push({\n            key: 'null',\n            value: props.legendItems['null']\n          });\n        }\n\n        var legendWidth = (width - props.margin.right - props.margin.left) / indexLegendItems.length;\n        console.log(indexLegendItems); // make legend\n\n        var indexLegend = chartDiv.appendSelect('div.legend-container') // .style('align-items', `${props.valign}`)\n        .selectAll('.legend-div').data(indexLegendItems); // for smooth data updation\n\n        indexLegend.enter().append('div').attr('class', \"legend-div indexLegend\").style('display', 'flex').style('align-items', \"start\") // .style('width', `${legendWidth}px`)\n        .html(function (d) {\n          var color = +d.key !== null && !isNaN(+d.key) ? props.stripColor[+d.key] : props.baseColor;\n          return \"<span style=\\\"width:1rem; height:1rem;min-width:1rem; min-height:1rem; background: \".concat(color, \"\\\"></span> <p style=\\\"margin:0 0 0 0.5rem;\\\">\").concat(d.value, \"</p>\");\n        }).merge(indexLegend) // .style('width', `${legendWidth}px`)\n        .html(function (d) {\n          var color = +d.key !== null && !isNaN(+d.key) ? props.stripColor[+d.key] : props.baseColor;\n          return \"<span style=\\\"width:1rem; height:1rem;min-width:1rem; min-height:1rem; background: \".concat(color, \"\\\"></span> <p style=\\\"margin:0 0 0 0.5rem;\\\">\").concat(d.value, \"</p>\");\n        });\n        indexLegend.exit().transition(transition).remove();\n      }\n\n      return this;\n    }\n  }]);\n\n  return CountryLockdownIndicatorStrips;\n}(_base_ChartComponent__WEBPACK_IMPORTED_MODULE_7__[\"default\"]); // console.log(this.defaultProps);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CountryLockdownIndicatorStrips);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL2NoYXJ0LmpzPzdiYjgiXSwibmFtZXMiOlsiZGF0ZVBhcnNlIiwiZDMiLCJ0aW1lUGFyc2UiLCJkYXRlRm9ybWF0IiwidGltZUZvcm1hdCIsImRhdGVGb3JtYXRfdHQiLCJudW1iZXJGb3JtYXRfdHQiLCJmb3JtYXQiLCJDb3VudHJ5TG9ja2Rvd25JbmRpY2F0b3JTdHJpcHMiLCJkYXRhUGFyYW1zIiwiZGF0ZSIsImluZGV4Iiwic3RlcHMiLCJzdGVwVmFsdWUiLCJoZWlnaHQiLCJtYXJnaW4iLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsImxlZnQiLCJ2YWxpZ24iLCJiYXNlQ29sb3IiLCJzdHJpcENvbG9yIiwibGVnZW5kSXRlbXMiLCJkZWZhdWx0RGF0YSIsImRhdGEiLCJwcm9wcyIsIm5vZGUiLCJzZWxlY3Rpb24iLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ3aWR0aCIsInRyYW5zaXRpb24iLCJkdXJhdGlvbiIsImNoYXJ0RGl2IiwiYXBwZW5kU2VsZWN0IiwiYXR0ciIsInN0eWxlIiwic3R5bGVzIiwieVNjYWxlIiwic2NhbGVMaW5lYXIiLCJkb21haW4iLCJyYW5nZSIsInhTY2FsZSIsInNjYWxlQmFuZCIsIm1hcCIsImQiLCJwYWRkaW5nIiwiY29sb3JEb21haW4iLCJPYmplY3QiLCJrZXlzIiwiZXh0ZW50IiwiY29sb3JSYW5nZSIsImNvbG9yU2NhbGUiLCJpbnRlcnBvbGF0ZSIsImludGVycG9sYXRlSGNsIiwiYmFycyIsInNlbGVjdEFsbCIsImkiLCJzdHJpcGhlaWdodCIsImVudGVyIiwiYXBwZW5kIiwic3RlcFNpemUiLCJzdGVwIiwiYmFuZHdpZHRoIiwidmFsIiwicGFyc2VGbG9hdCIsImlzTmFOIiwibWVyZ2UiLCJleGl0IiwicmVtb3ZlIiwiaW5kZXhMZWdlbmRJdGVtcyIsImluZGV4TGVnZW5kIiwiZm9yRWFjaCIsIml0ZW0iLCJrZXkiLCJ2YWx1ZSIsInB1c2giLCJsZWdlbmRXaWR0aCIsImxlbmd0aCIsImNvbnNvbGUiLCJsb2ciLCJodG1sIiwiY29sb3IiLCJDaGFydENvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtDQUVBO0FBQ0E7QUFDQTs7QUFFQSxJQUFNQSxTQUFTLEdBQUdDLGlEQUFFLENBQUNDLFNBQUgsQ0FBYSxVQUFiLENBQWxCO0FBQ0EsSUFBTUMsVUFBVSxHQUFHRixpREFBRSxDQUFDRyxVQUFILENBQWMsT0FBZCxDQUFuQjtBQUNBLElBQU1DLGFBQWEsR0FBR0osaURBQUUsQ0FBQ0csVUFBSCxDQUFjLE9BQWQsQ0FBdEI7QUFDQSxJQUFNRSxlQUFlLEdBQUdMLGlEQUFFLENBQUNNLE1BQUgsQ0FBVSxHQUFWLENBQXhCOztJQUVNQyw4Qjs7Ozs7Ozs7Ozs7Ozs7Ozt1TkFDYTtBQUNYQyxnQkFBVSxFQUFFO0FBQ1JDLFlBQUksRUFBRSxNQURFO0FBRVJDLGFBQUssRUFBRSxJQUZDO0FBR1JDLGFBQUssRUFBRSxDQUhDO0FBR0U7QUFDVkMsaUJBQVMsRUFBRTtBQUpILE9BREQ7QUFPWEMsWUFBTSxFQUFFLEdBUEc7QUFRWEMsWUFBTSxFQUFFO0FBQ0pDLFdBQUcsRUFBRSxFQUREO0FBRUpDLGFBQUssRUFBRSxFQUZIO0FBR0pDLGNBQU0sRUFBRSxFQUhKO0FBSUpDLFlBQUksRUFBRTtBQUpGLE9BUkc7QUFjWEMsWUFBTSxFQUFFLFFBZEc7QUFjTztBQUNsQkMsZUFBUyxFQUFFLFNBZkE7QUFnQlhDLGdCQUFVLEVBQUU7QUFBRTtBQUNWLFdBQUcsU0FESztBQUVSLFdBQUcsU0FGSztBQUdSLFdBQUcsUUFISztBQUlSLFdBQUc7QUFKSyxPQWhCRDtBQXNCWEMsaUJBQVcsRUFBRTtBQUFFO0FBQ1gsZ0JBQVEsU0FEQztBQUVULHNCQUFjO0FBQ1YsYUFBRyxVQURPO0FBRVYsYUFBRztBQUZPLFNBRkw7QUFNVCx1QkFBZTtBQUNYLGFBQUcsYUFEUTtBQUVYLGFBQUcsbUJBRlE7QUFHWCxhQUFHLCtGQUhRO0FBSVgsYUFBRztBQUpRO0FBTk47QUF0QkYsSzs7c05BcUNEQyw4Qzs7Ozs7OzsyQkFFUDtBQUNILFVBQU1DLElBQUksR0FBRyxLQUFLQSxJQUFMLEVBQWI7QUFDQSxVQUFNQyxLQUFLLEdBQUcsS0FBS0EsS0FBTCxFQUFkO0FBQ0EsVUFBTUMsSUFBSSxHQUFHLEtBQUtDLFNBQUwsR0FBaUJELElBQWpCLEVBQWIsQ0FIRyxDQUtIO0FBQ0E7O0FBTkcsa0NBVUNBLElBQUksQ0FBQ0UscUJBQUwsRUFWRDtBQUFBLFVBU0NDLEtBVEQseUJBU0NBLEtBVEQ7O0FBWUgsVUFBTUMsVUFBVSxHQUFHOUIsaURBQUUsQ0FBQzhCLFVBQUgsR0FDZEMsUUFEYyxDQUNMLEdBREssQ0FBbkIsQ0FaRyxDQWVIOztBQUNBLFVBQU1DLFFBQVEsR0FBRyxLQUFLTCxTQUFMLEdBQ1pNLFlBRFksQ0FDQyxLQURELEVBQ1E7QUFEUixPQUVaQyxJQUZZLENBRVAsT0FGTyxvQ0FHWkMsS0FIWSxDQUdOLE9BSE0sWUFHTU4sS0FITixTQUlaTSxLQUpZLENBSU4sUUFKTSxVQUtaRixZQUxZLENBS0MsS0FMRCxFQU1aRyxNQU5ZLENBTUw7QUFDSixnQ0FBaUJYLEtBQUssQ0FBQ1gsTUFBTixDQUFhQyxHQUE5QjtBQURJLE9BTkssQ0FBakIsQ0FoQkcsQ0F5Qkg7QUFFQTs7QUFDQSxVQUFNc0IsTUFBTSxHQUFHckMsaURBQUUsQ0FBQ3NDLFdBQUgsR0FDVkMsTUFEVSxDQUNILENBQUMsQ0FBRCxFQUFJZCxLQUFLLENBQUNqQixVQUFOLENBQWlCRyxLQUFqQixHQUF5QixDQUE3QixDQURHLEVBRVY2QixLQUZVLENBRUosQ0FBQ2YsS0FBSyxDQUFDWixNQUFOLEdBQWVZLEtBQUssQ0FBQ1gsTUFBTixDQUFhRyxNQUE3QixFQUFxQ1EsS0FBSyxDQUFDWCxNQUFOLENBQWFDLEdBQWxELENBRkksQ0FBZjtBQUlBLFVBQU0wQixNQUFNLEdBQUd6QyxpREFBRSxDQUFDMEMsU0FBSCxHQUNWSCxNQURVLENBQ0hmLElBQUksQ0FBQ21CLEdBQUwsQ0FBUyxVQUFBQyxDQUFDO0FBQUEsZUFBSTdDLFNBQVMsQ0FBQzZDLENBQUMsQ0FBQ25CLEtBQUssQ0FBQ2pCLFVBQU4sQ0FBaUJDLElBQWxCLENBQUYsQ0FBYjtBQUFBLE9BQVYsQ0FERyxFQUVWK0IsS0FGVSxDQUVKLENBQUNmLEtBQUssQ0FBQ1gsTUFBTixDQUFhSSxJQUFkLEVBQW9CVyxLQUFLLEdBQUdKLEtBQUssQ0FBQ1gsTUFBTixDQUFhRSxLQUF6QyxDQUZJLEVBR1Y2QixPQUhVLENBR0YsQ0FIRSxDQUFmO0FBS0EsVUFBTUMsV0FBVyxHQUFHckIsS0FBSyxDQUFDSixVQUFOLEdBQW9CMEIsTUFBTSxDQUFDQyxJQUFQLENBQVl2QixLQUFLLENBQUNKLFVBQWxCLENBQUQsQ0FBZ0NzQixHQUFoQyxDQUFvQyxVQUFBQyxDQUFDO0FBQUEsZUFBSSxDQUFDQSxDQUFMO0FBQUEsT0FBckMsQ0FBbkIsR0FBa0U1QyxpREFBRSxDQUFDaUQsTUFBSCxDQUFVekIsSUFBSSxDQUFDbUIsR0FBTCxDQUFTLFVBQUFDLENBQUM7QUFBQSxlQUFJQSxDQUFDLENBQUNuQixLQUFLLENBQUNqQixVQUFOLENBQWlCRSxLQUFsQixDQUFMO0FBQUEsT0FBVixDQUFWLENBQXRGO0FBRUEsVUFBTXdDLFVBQVUsR0FBR3pCLEtBQUssQ0FBQ0osVUFBTixHQUFtQnlCLFdBQVcsQ0FBQ0gsR0FBWixDQUFnQixVQUFBQyxDQUFDO0FBQUEsZUFBSW5CLEtBQUssQ0FBQ0osVUFBTixXQUFvQnVCLENBQXBCLEVBQUo7QUFBQSxPQUFqQixDQUFuQixHQUFvRSxDQUFDLFNBQUQsRUFBWSxTQUFaLENBQXZGO0FBRUEsVUFBTU8sVUFBVSxHQUFHbkQsaURBQUUsQ0FBQ3NDLFdBQUgsR0FDZEMsTUFEYyxDQUNQTyxXQURPLEVBRWROLEtBRmMsQ0FFUlUsVUFGUSxFQUdkRSxXQUhjLENBR0ZDLGtEQUhFLENBQW5CLENBekNHLENBOENIOztBQUNBLFVBQU1DLElBQUksR0FBR3RCLFFBQVEsQ0FBQ0MsWUFBVCxDQUFzQixvQkFBdEIsRUFDUkUsS0FEUSxDQUNGLFNBREUsRUFDUyxNQURULEVBRVJBLEtBRlEsQ0FFRixhQUZFLFlBRWdCVixLQUFLLENBQUNOLE1BRnRCLEdBR1JvQyxTQUhRLENBR0UsTUFIRixFQUlSL0IsSUFKUSxDQUlIQSxJQUpHLEVBSUcsVUFBQ29CLENBQUQsRUFBSVksQ0FBSjtBQUFBLGVBQVVaLENBQUMsQ0FBQ25CLEtBQUssQ0FBQ2pCLFVBQU4sQ0FBaUJDLElBQWxCLENBQVg7QUFBQSxPQUpILENBQWIsQ0EvQ0csQ0FtRGtEOztBQUVyRCxVQUFNZ0QsV0FBVyxHQUFHaEMsS0FBSyxDQUFDSCxXQUFOLEdBQW9CLENBQUNHLEtBQUssQ0FBQ1osTUFBTixHQUFlWSxLQUFLLENBQUNYLE1BQU4sQ0FBYUMsR0FBNUIsR0FBa0NVLEtBQUssQ0FBQ1gsTUFBTixDQUFhRyxNQUFoRCxJQUEwRCxHQUE5RSxHQUFxRlEsS0FBSyxDQUFDWixNQUFOLEdBQWVZLEtBQUssQ0FBQ1gsTUFBTixDQUFhQyxHQUE1QixHQUFrQ1UsS0FBSyxDQUFDWCxNQUFOLENBQWFHLE1BQXhKO0FBRUFxQyxVQUFJLENBQUNJLEtBQUwsR0FBYUMsTUFBYixDQUFvQixLQUFwQixFQUNLekIsSUFETCxDQUNVLE9BRFYsRUFDbUIsVUFBQVUsQ0FBQztBQUFBLDZCQUFXQSxDQUFDLENBQUNuQixLQUFLLENBQUNqQixVQUFOLENBQWlCQyxJQUFsQixDQUFaO0FBQUEsT0FEcEIsRUFFSzBCLEtBRkwsQ0FFVyxTQUZYLEVBRXNCLGNBRnRCLEVBR0tBLEtBSEwsQ0FHVyxRQUhYLEVBR3FCLFVBQUFTLENBQUMsRUFBSTtBQUNsQixZQUFNZ0IsUUFBUSxHQUFJSCxXQUFELEdBQWdCaEMsS0FBSyxDQUFDakIsVUFBTixDQUFpQkcsS0FBbEQ7QUFDQSxZQUFNa0QsSUFBSSxHQUFHakIsQ0FBQyxDQUFDbkIsS0FBSyxDQUFDakIsVUFBTixDQUFpQkksU0FBbEIsQ0FBRCxHQUFnQyxDQUE3QztBQUNBLGVBQU9nQyxDQUFDLENBQUNuQixLQUFLLENBQUNqQixVQUFOLENBQWlCRSxLQUFsQixDQUFELEdBQTZCbUQsSUFBSSxHQUFHQSxJQUFJLEdBQUdELFFBQVAsR0FBa0IsSUFBckIsR0FBNEJBLFFBQVEsR0FBRyxJQUF4RSxHQUFnRkEsUUFBUSxHQUFHLElBQWxHO0FBQ0gsT0FQTCxFQVFLekIsS0FSTCxDQVFXLE9BUlgsRUFRb0JNLE1BQU0sQ0FBQ3FCLFNBQVAsS0FBcUIsSUFSekMsRUFTSzNCLEtBVEwsQ0FTVyxZQVRYLEVBU3lCLFVBQUFTLENBQUMsRUFBSTtBQUN0QixZQUFJbUIsR0FBRyxHQUFHQyxVQUFVLENBQUNwQixDQUFDLENBQUNuQixLQUFLLENBQUNqQixVQUFOLENBQWlCRSxLQUFsQixDQUFGLENBQXBCO0FBQ0EsZUFBUXFELEdBQUcsS0FBSyxJQUFULElBQWtCLENBQUVFLEtBQUssQ0FBQ0YsR0FBRCxDQUF6QixHQUFrQ1osVUFBVSxDQUFDWSxHQUFELENBQTVDLEdBQW9EdEMsS0FBSyxDQUFDTCxTQUFqRTtBQUNILE9BWkwsRUFhSzhDLEtBYkwsQ0FhV1osSUFiWCxFQWNLeEIsVUFkTCxDQWNnQkEsVUFkaEIsRUFlS0ssS0FmTCxDQWVXLFNBZlgsRUFlc0IsY0FmdEIsRUFnQktBLEtBaEJMLENBZ0JXLFFBaEJYLEVBZ0JxQixVQUFBUyxDQUFDLEVBQUk7QUFDbEIsWUFBTWdCLFFBQVEsR0FBSUgsV0FBRCxHQUFnQmhDLEtBQUssQ0FBQ2pCLFVBQU4sQ0FBaUJHLEtBQWxEO0FBQ0EsWUFBTWtELElBQUksR0FBR2pCLENBQUMsQ0FBQ25CLEtBQUssQ0FBQ2pCLFVBQU4sQ0FBaUJJLFNBQWxCLENBQUQsR0FBZ0MsQ0FBN0M7QUFDQSxlQUFPZ0MsQ0FBQyxDQUFDbkIsS0FBSyxDQUFDakIsVUFBTixDQUFpQkUsS0FBbEIsQ0FBRCxHQUE2Qm1ELElBQUksR0FBR0EsSUFBSSxHQUFHRCxRQUFQLEdBQWtCLElBQXJCLEdBQTRCQSxRQUFRLEdBQUcsSUFBeEUsR0FBZ0ZBLFFBQVEsR0FBRyxJQUFsRztBQUNILE9BcEJMLEVBcUJLekIsS0FyQkwsQ0FxQlcsT0FyQlgsRUFxQm9CTSxNQUFNLENBQUNxQixTQUFQLEtBQXFCLElBckJ6QyxFQXNCSzNCLEtBdEJMLENBc0JXLFlBdEJYLEVBc0J5QixVQUFBUyxDQUFDLEVBQUk7QUFDdEIsWUFBSW1CLEdBQUcsR0FBR0MsVUFBVSxDQUFDcEIsQ0FBQyxDQUFDbkIsS0FBSyxDQUFDakIsVUFBTixDQUFpQkUsS0FBbEIsQ0FBRixDQUFwQjtBQUNBLGVBQVFxRCxHQUFHLEtBQUssSUFBVCxJQUFrQixDQUFFRSxLQUFLLENBQUNGLEdBQUQsQ0FBekIsR0FBa0NaLFVBQVUsQ0FBQ1ksR0FBRCxDQUE1QyxHQUFvRHRDLEtBQUssQ0FBQ0wsU0FBakU7QUFDSCxPQXpCTDtBQTJCQWtDLFVBQUksQ0FBQ2EsSUFBTCxHQUNLckMsVUFETCxDQUNnQkEsVUFEaEIsRUFFS0ksSUFGTCxDQUVVLFFBRlYsRUFFb0IsQ0FGcEIsRUFHS2tDLE1BSEw7O0FBTUEsVUFBSTNDLEtBQUssQ0FBQ0gsV0FBVixFQUF1QjtBQUNuQixZQUFNK0MsZ0JBQWdCLEdBQUcsRUFBekI7QUFDQ3RCLGNBQU0sQ0FBQ0MsSUFBUCxDQUFZdkIsS0FBSyxDQUFDSCxXQUFOLENBQWtCZ0QsV0FBOUIsQ0FBRCxDQUE2Q0MsT0FBN0MsQ0FBcUQsVUFBQTNCLENBQUMsRUFBSTtBQUN0RCxjQUFJNEIsSUFBSSxHQUFHO0FBQ1BDLGVBQUcsRUFBRTdCLENBREU7QUFFUDhCLGlCQUFLLEVBQUVqRCxLQUFLLENBQUNILFdBQU4sQ0FBa0JnRCxXQUFsQixDQUE4QjFCLENBQTlCO0FBRkEsV0FBWDtBQUlBeUIsMEJBQWdCLENBQUNNLElBQWpCLENBQXNCSCxJQUF0QjtBQUNILFNBTkQ7O0FBT0EsWUFBSS9DLEtBQUssQ0FBQ0gsV0FBTixDQUFrQixNQUFsQixDQUFKLEVBQStCO0FBQzNCK0MsMEJBQWdCLENBQUNNLElBQWpCLENBQXNCO0FBQ2xCRixlQUFHLEVBQUUsTUFEYTtBQUVsQkMsaUJBQUssRUFBRWpELEtBQUssQ0FBQ0gsV0FBTixDQUFrQixNQUFsQjtBQUZXLFdBQXRCO0FBSUg7O0FBQ0QsWUFBTXNELFdBQVcsR0FBRyxDQUFDL0MsS0FBSyxHQUFHSixLQUFLLENBQUNYLE1BQU4sQ0FBYUUsS0FBckIsR0FBNkJTLEtBQUssQ0FBQ1gsTUFBTixDQUFhSSxJQUEzQyxJQUFtRG1ELGdCQUFnQixDQUFDUSxNQUF4RjtBQUNBQyxlQUFPLENBQUNDLEdBQVIsQ0FBWVYsZ0JBQVosRUFoQm1CLENBaUJmOztBQUNKLFlBQU1DLFdBQVcsR0FBR3RDLFFBQVEsQ0FBQ0MsWUFBVCxDQUFzQixzQkFBdEIsRUFDaEI7QUFEZ0IsU0FFZnNCLFNBRmUsQ0FFTCxhQUZLLEVBR2YvQixJQUhlLENBR1Y2QyxnQkFIVSxDQUFwQixDQWxCbUIsQ0FxQlU7O0FBRTdCQyxtQkFBVyxDQUFDWixLQUFaLEdBQW9CQyxNQUFwQixDQUEyQixLQUEzQixFQUNLekIsSUFETCxDQUNVLE9BRFYsNEJBRUtDLEtBRkwsQ0FFVyxTQUZYLEVBRXNCLE1BRnRCLEVBR0tBLEtBSEwsQ0FHVyxhQUhYLFdBSUk7QUFKSixTQUtLNkMsSUFMTCxDQUtVLFVBQUFwQyxDQUFDLEVBQUk7QUFDUCxjQUFJcUMsS0FBSyxHQUFJLENBQUNyQyxDQUFDLENBQUM2QixHQUFILEtBQVcsSUFBWixJQUFxQixDQUFFUixLQUFLLENBQUMsQ0FBQ3JCLENBQUMsQ0FBQzZCLEdBQUosQ0FBNUIsR0FBd0NoRCxLQUFLLENBQUNKLFVBQU4sQ0FBaUIsQ0FBQ3VCLENBQUMsQ0FBQzZCLEdBQXBCLENBQXhDLEdBQW1FaEQsS0FBSyxDQUFDTCxTQUFyRjtBQUNBLDhHQUE0RjZELEtBQTVGLDBEQUE4SXJDLENBQUMsQ0FBQzhCLEtBQWhKO0FBQ0gsU0FSTCxFQVNLUixLQVRMLENBU1dJLFdBVFgsRUFVSTtBQVZKLFNBV0tVLElBWEwsQ0FXVSxVQUFBcEMsQ0FBQyxFQUFJO0FBQ1AsY0FBSXFDLEtBQUssR0FBSSxDQUFDckMsQ0FBQyxDQUFDNkIsR0FBSCxLQUFXLElBQVosSUFBcUIsQ0FBRVIsS0FBSyxDQUFDLENBQUNyQixDQUFDLENBQUM2QixHQUFKLENBQTVCLEdBQXdDaEQsS0FBSyxDQUFDSixVQUFOLENBQWlCLENBQUN1QixDQUFDLENBQUM2QixHQUFwQixDQUF4QyxHQUFtRWhELEtBQUssQ0FBQ0wsU0FBckY7QUFDQSw4R0FBNEY2RCxLQUE1RiwwREFBOElyQyxDQUFDLENBQUM4QixLQUFoSjtBQUNILFNBZEw7QUFnQkFKLG1CQUFXLENBQUNILElBQVosR0FDS3JDLFVBREwsQ0FDZ0JBLFVBRGhCLEVBRUtzQyxNQUZMO0FBS0g7O0FBQ0QsYUFBTyxJQUFQO0FBQ0g7Ozs7RUE5S3dDYyw0RCxHQWdMN0M7OztBQUNlM0UsNkZBQWYiLCJmaWxlIjoiLi9zcmMvbGliL2NoYXJ0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENoYXJ0Q29tcG9uZW50IGZyb20gJy4vYmFzZS9DaGFydENvbXBvbmVudCc7XG5pbXBvcnQgZDMgZnJvbSAnLi91dGlscy9kMyc7XG5pbXBvcnQgZGVmYXVsdERhdGEgZnJvbSAnLi9kZWZhdWx0RGF0YS5qc29uJztcbmltcG9ydCB7IGludGVycG9sYXRlLCBpbnRlcnBvbGF0ZUhzbCwgaW50ZXJwb2xhdGVIY2wgfSBmcm9tICdkMyc7XG5pbXBvcnQgZDNTZWxlY3Rpb25NdWx0aSBmcm9tICdkMy1zZWxlY3Rpb24tbXVsdGknO1xuLy8gc2VlIGRvY3Mgb24gaHR0cHM6Ly9naXRodWIuY29tL3JldXRlcnMtZ3JhcGhpY3MvZ3JhcGhpY3MtYXRsYXMtY2xpZW50XG4vLyBpbXBvcnQgQXRsYXNNZXRhZGF0YUNsaWVudCBmcm9tICdAcmV1dGVycy1ncmFwaGljcy9ncmFwaGljcy1hdGxhcy1jbGllbnQnO1xuLy8gY29uc3QgYXRsYXN0Q2xpZW50ID0gbmV3IEF0bGFzTWV0YWRhdGFDbGllbnQoKTtcblxuY29uc3QgZGF0ZVBhcnNlID0gZDMudGltZVBhcnNlKCclWS0lbS0lZCcpO1xuY29uc3QgZGF0ZUZvcm1hdCA9IGQzLnRpbWVGb3JtYXQoJyViICVlJyk7XG5jb25zdCBkYXRlRm9ybWF0X3R0ID0gZDMudGltZUZvcm1hdCgnJUIgJWUnKTtcbmNvbnN0IG51bWJlckZvcm1hdF90dCA9IGQzLmZvcm1hdCgnLCcpO1xuXG5jbGFzcyBDb3VudHJ5TG9ja2Rvd25JbmRpY2F0b3JTdHJpcHMgZXh0ZW5kcyBDaGFydENvbXBvbmVudCB7XG4gICAgZGVmYXVsdFByb3BzID0ge1xuICAgICAgICBkYXRhUGFyYW1zOiB7XG4gICAgICAgICAgICBkYXRlOiAnZGF0ZScsXG4gICAgICAgICAgICBpbmRleDogJ2MxJyxcbiAgICAgICAgICAgIHN0ZXBzOiAyLCAvLyBzdGVwVmFsdWUgPSAwLCAxLi4uXG4gICAgICAgICAgICBzdGVwVmFsdWU6ICdmbGFnJyxcbiAgICAgICAgfSxcbiAgICAgICAgaGVpZ2h0OiAyNTAsXG4gICAgICAgIG1hcmdpbjoge1xuICAgICAgICAgICAgdG9wOiAxMCxcbiAgICAgICAgICAgIHJpZ2h0OiAxMCxcbiAgICAgICAgICAgIGJvdHRvbTogMTAsXG4gICAgICAgICAgICBsZWZ0OiAxMCxcbiAgICAgICAgfSxcbiAgICAgICAgdmFsaWduOiAnY2VudGVyJywgLy8gc3RhcnQsIGNlbnRlciwgYmFzZWxpbmVcbiAgICAgICAgYmFzZUNvbG9yOiAnI0VDRUZGNCcsXG4gICAgICAgIHN0cmlwQ29sb3I6IHsgLy8gc2hvdWxkIGJlIG51bWVyaWMgdmFsdWVzIHRoYXQgYXJlIG1hcHBlZCBmcm9tIHRoZSBkYXRhXG4gICAgICAgICAgICAwOiAnI2QxZWVlYScsXG4gICAgICAgICAgICAxOiAnI2ZmZTQ3ZicsXG4gICAgICAgICAgICAyOiAnb3JhbmdlJyxcbiAgICAgICAgICAgIDM6ICcjYTUwZjE1JyxcbiAgICAgICAgfSxcbiAgICAgICAgbGVnZW5kSXRlbXM6IHsgLy8gc2hvdWxkIGNvbnRhaW4gaXRlbXMgZnJvbSBzdHJpcENvbG9yXG4gICAgICAgICAgICAnbnVsbCc6ICdubyBkYXRhJyxcbiAgICAgICAgICAgICdzdGVwTGVnZW5kJzoge1xuICAgICAgICAgICAgICAgIDA6ICd0YXJnZXRlZCcsXG4gICAgICAgICAgICAgICAgMTogJ25hdGlvbndpZGUnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ2luZGV4TGVnZW5kJzoge1xuICAgICAgICAgICAgICAgIDA6ICdubyBtZWFzdXJlcycsXG4gICAgICAgICAgICAgICAgMTogJ3JlY29tbWVuZCBjbG9zaW5nJyxcbiAgICAgICAgICAgICAgICAyOiAncmVxdWlyZSBjbG9zaW5nIChvbmx5IHNvbWUgbGV2ZWxzIG9yIGNhdGVnb3JpZXMsIGVnIGp1c3QgaGlnaCBzY2hvb2wsIG9yIGp1c3QgcHVibGljIHNjaG9vbHMpJyxcbiAgICAgICAgICAgICAgICAzOiAncmVxdWlyZSBjbG9zaW5nIGFsbCBsZXZlbHMnXG4gICAgICAgICAgICB9LFxuICAgICAgICB9XG4gICAgfTtcblxuICAgIGRlZmF1bHREYXRhID0gZGVmYXVsdERhdGE7XG5cbiAgICBkcmF3KCkge1xuICAgICAgICBjb25zdCBkYXRhID0gdGhpcy5kYXRhKCk7XG4gICAgICAgIGNvbnN0IHByb3BzID0gdGhpcy5wcm9wcygpO1xuICAgICAgICBjb25zdCBub2RlID0gdGhpcy5zZWxlY3Rpb24oKS5ub2RlKCk7XG5cbiAgICAgICAgLy8gZ2V0IGNvdW50cnkgZGV0YWlscyBmcm9tIEF0bGFzQ2xpZW50IGZyb20gSVNPLTJcbiAgICAgICAgLy8gcHJvcHMuY291bnRyeSA9IGF0bGFzdENsaWVudC5nZXRDb3VudHJ5KHByb3BzLmNvdW50cnlJU08yKTtcblxuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICB3aWR0aFxuICAgICAgICB9ID0gbm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuICAgICAgICBjb25zdCB0cmFuc2l0aW9uID0gZDMudHJhbnNpdGlvbigpXG4gICAgICAgICAgICAuZHVyYXRpb24oNzUwKTtcblxuICAgICAgICAvLyBtYWluIGNoYXJ0IGNvbnRhaW5lclxuICAgICAgICBjb25zdCBjaGFydERpdiA9IHRoaXMuc2VsZWN0aW9uKClcbiAgICAgICAgICAgIC5hcHBlbmRTZWxlY3QoJ2RpdicpIC8vIHNlZSBkb2NzIGluIC4vdXRpbHMvZDMuanNcbiAgICAgICAgICAgIC5hdHRyKCdjbGFzcycsIGBDb3VudHJ5TG9ja2Rvd25JbmRpY2F0b3JTdHJpcHNgKVxuICAgICAgICAgICAgLnN0eWxlKCd3aWR0aCcsIGAke3dpZHRofXB4YClcbiAgICAgICAgICAgIC5zdHlsZSgnaGVpZ2h0JywgYGF1dG9gKVxuICAgICAgICAgICAgLmFwcGVuZFNlbGVjdCgnZGl2JylcbiAgICAgICAgICAgIC5zdHlsZXMoe1xuICAgICAgICAgICAgICAgICdtYXJnaW4tdG9wJzogYCR7cHJvcHMubWFyZ2luLnRvcH1weGAsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgLy8gLnN0eWxlKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlKCR7cHJvcHMubWFyZ2luLmxlZnR9cHgsICR7cHJvcHMubWFyZ2luLnRvcH1weClgKTtcblxuICAgICAgICAvLyBzZXQgc2NhbGVzXG4gICAgICAgIGNvbnN0IHlTY2FsZSA9IGQzLnNjYWxlTGluZWFyKClcbiAgICAgICAgICAgIC5kb21haW4oWzAsIHByb3BzLmRhdGFQYXJhbXMuc3RlcHMgLSAxXSlcbiAgICAgICAgICAgIC5yYW5nZShbcHJvcHMuaGVpZ2h0IC0gcHJvcHMubWFyZ2luLmJvdHRvbSwgcHJvcHMubWFyZ2luLnRvcF0pO1xuXG4gICAgICAgIGNvbnN0IHhTY2FsZSA9IGQzLnNjYWxlQmFuZCgpXG4gICAgICAgICAgICAuZG9tYWluKGRhdGEubWFwKGQgPT4gZGF0ZVBhcnNlKGRbcHJvcHMuZGF0YVBhcmFtcy5kYXRlXSkpKVxuICAgICAgICAgICAgLnJhbmdlKFtwcm9wcy5tYXJnaW4ubGVmdCwgd2lkdGggLSBwcm9wcy5tYXJnaW4ucmlnaHRdKVxuICAgICAgICAgICAgLnBhZGRpbmcoMCk7XG5cbiAgICAgICAgY29uc3QgY29sb3JEb21haW4gPSBwcm9wcy5zdHJpcENvbG9yID8gKE9iamVjdC5rZXlzKHByb3BzLnN0cmlwQ29sb3IpKS5tYXAoZCA9PiArZCkgOiBkMy5leHRlbnQoZGF0YS5tYXAoZCA9PiBkW3Byb3BzLmRhdGFQYXJhbXMuaW5kZXhdKSk7XG5cbiAgICAgICAgY29uc3QgY29sb3JSYW5nZSA9IHByb3BzLnN0cmlwQ29sb3IgPyBjb2xvckRvbWFpbi5tYXAoZCA9PiBwcm9wcy5zdHJpcENvbG9yW2Ake2R9YF0pIDogWycjY2NjY2NjJywgJyMzMzMzMzMnXVxuXG4gICAgICAgIGNvbnN0IGNvbG9yU2NhbGUgPSBkMy5zY2FsZUxpbmVhcigpXG4gICAgICAgICAgICAuZG9tYWluKGNvbG9yRG9tYWluKVxuICAgICAgICAgICAgLnJhbmdlKGNvbG9yUmFuZ2UpXG4gICAgICAgICAgICAuaW50ZXJwb2xhdGUoaW50ZXJwb2xhdGVIY2wpO1xuXG4gICAgICAgIC8vIG1ha2UgYmFyc1xuICAgICAgICBjb25zdCBiYXJzID0gY2hhcnREaXYuYXBwZW5kU2VsZWN0KCdkaXYuYmFycy1jb250YWluZXInKVxuICAgICAgICAgICAgLnN0eWxlKCdkaXNwbGF5JywgJ2ZsZXgnKVxuICAgICAgICAgICAgLnN0eWxlKCdhbGlnbi1pdGVtcycsIGAke3Byb3BzLnZhbGlnbn1gKVxuICAgICAgICAgICAgLnNlbGVjdEFsbCgnLmJhcicpXG4gICAgICAgICAgICAuZGF0YShkYXRhLCAoZCwgaSkgPT4gZFtwcm9wcy5kYXRhUGFyYW1zLmRhdGVdKTsgLy8gZm9yIHNtb290aCBkYXRhIHVwZGF0aW9uXG5cbiAgICAgICAgY29uc3Qgc3RyaXBoZWlnaHQgPSBwcm9wcy5sZWdlbmRJdGVtcyA/IChwcm9wcy5oZWlnaHQgLSBwcm9wcy5tYXJnaW4udG9wIC0gcHJvcHMubWFyZ2luLmJvdHRvbSkgKiAwLjIgOiAocHJvcHMuaGVpZ2h0IC0gcHJvcHMubWFyZ2luLnRvcCAtIHByb3BzLm1hcmdpbi5ib3R0b20pO1xuXG4gICAgICAgIGJhcnMuZW50ZXIoKS5hcHBlbmQoJ2RpdicpXG4gICAgICAgICAgICAuYXR0cignY2xhc3MnLCBkID0+IGBiYXIgJHtkW3Byb3BzLmRhdGFQYXJhbXMuZGF0ZV19YClcbiAgICAgICAgICAgIC5zdHlsZSgnZGlzcGxheScsICdpbmxpbmUtYmxvY2snKVxuICAgICAgICAgICAgLnN0eWxlKCdoZWlnaHQnLCBkID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBzdGVwU2l6ZSA9IChzdHJpcGhlaWdodCkgLyBwcm9wcy5kYXRhUGFyYW1zLnN0ZXBzO1xuICAgICAgICAgICAgICAgIGNvbnN0IHN0ZXAgPSBkW3Byb3BzLmRhdGFQYXJhbXMuc3RlcFZhbHVlXSArIDE7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRbcHJvcHMuZGF0YVBhcmFtcy5pbmRleF0gPyAoc3RlcCA/IHN0ZXAgKiBzdGVwU2l6ZSArICdweCcgOiBzdGVwU2l6ZSArICdweCcpIDogc3RlcFNpemUgKyAncHgnO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5zdHlsZSgnd2lkdGgnLCB4U2NhbGUuYmFuZHdpZHRoKCkgKyAncHgnKVxuICAgICAgICAgICAgLnN0eWxlKCdiYWNrZ3JvdW5kJywgZCA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHZhbCA9IHBhcnNlRmxvYXQoZFtwcm9wcy5kYXRhUGFyYW1zLmluZGV4XSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuICh2YWwgIT09IG51bGwpICYmICEoaXNOYU4odmFsKSkgPyBjb2xvclNjYWxlKHZhbCkgOiBwcm9wcy5iYXNlQ29sb3I7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLm1lcmdlKGJhcnMpXG4gICAgICAgICAgICAudHJhbnNpdGlvbih0cmFuc2l0aW9uKVxuICAgICAgICAgICAgLnN0eWxlKCdkaXNwbGF5JywgJ2lubGluZS1ibG9jaycpXG4gICAgICAgICAgICAuc3R5bGUoJ2hlaWdodCcsIGQgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHN0ZXBTaXplID0gKHN0cmlwaGVpZ2h0KSAvIHByb3BzLmRhdGFQYXJhbXMuc3RlcHM7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3RlcCA9IGRbcHJvcHMuZGF0YVBhcmFtcy5zdGVwVmFsdWVdICsgMTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZFtwcm9wcy5kYXRhUGFyYW1zLmluZGV4XSA/IChzdGVwID8gc3RlcCAqIHN0ZXBTaXplICsgJ3B4JyA6IHN0ZXBTaXplICsgJ3B4JykgOiBzdGVwU2l6ZSArICdweCc7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnN0eWxlKCd3aWR0aCcsIHhTY2FsZS5iYW5kd2lkdGgoKSArICdweCcpXG4gICAgICAgICAgICAuc3R5bGUoJ2JhY2tncm91bmQnLCBkID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgdmFsID0gcGFyc2VGbG9hdChkW3Byb3BzLmRhdGFQYXJhbXMuaW5kZXhdKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKHZhbCAhPT0gbnVsbCkgJiYgIShpc05hTih2YWwpKSA/IGNvbG9yU2NhbGUodmFsKSA6IHByb3BzLmJhc2VDb2xvcjtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIGJhcnMuZXhpdCgpXG4gICAgICAgICAgICAudHJhbnNpdGlvbih0cmFuc2l0aW9uKVxuICAgICAgICAgICAgLmF0dHIoJ2hlaWdodCcsIDApXG4gICAgICAgICAgICAucmVtb3ZlKCk7XG5cblxuICAgICAgICBpZiAocHJvcHMubGVnZW5kSXRlbXMpIHtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4TGVnZW5kSXRlbXMgPSBbXTtcbiAgICAgICAgICAgIChPYmplY3Qua2V5cyhwcm9wcy5sZWdlbmRJdGVtcy5pbmRleExlZ2VuZCkpLmZvckVhY2goZCA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IGl0ZW0gPSB7XG4gICAgICAgICAgICAgICAgICAgIGtleTogZCxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHByb3BzLmxlZ2VuZEl0ZW1zLmluZGV4TGVnZW5kW2RdXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGluZGV4TGVnZW5kSXRlbXMucHVzaChpdGVtKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKHByb3BzLmxlZ2VuZEl0ZW1zWydudWxsJ10pIHtcbiAgICAgICAgICAgICAgICBpbmRleExlZ2VuZEl0ZW1zLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBrZXk6ICdudWxsJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHByb3BzLmxlZ2VuZEl0ZW1zWydudWxsJ11cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgbGVnZW5kV2lkdGggPSAod2lkdGggLSBwcm9wcy5tYXJnaW4ucmlnaHQgLSBwcm9wcy5tYXJnaW4ubGVmdCkgLyBpbmRleExlZ2VuZEl0ZW1zLmxlbmd0aDtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGluZGV4TGVnZW5kSXRlbXMpXG4gICAgICAgICAgICAgICAgLy8gbWFrZSBsZWdlbmRcbiAgICAgICAgICAgIGNvbnN0IGluZGV4TGVnZW5kID0gY2hhcnREaXYuYXBwZW5kU2VsZWN0KCdkaXYubGVnZW5kLWNvbnRhaW5lcicpXG4gICAgICAgICAgICAgICAgLy8gLnN0eWxlKCdhbGlnbi1pdGVtcycsIGAke3Byb3BzLnZhbGlnbn1gKVxuICAgICAgICAgICAgICAgIC5zZWxlY3RBbGwoJy5sZWdlbmQtZGl2JylcbiAgICAgICAgICAgICAgICAuZGF0YShpbmRleExlZ2VuZEl0ZW1zKTsgLy8gZm9yIHNtb290aCBkYXRhIHVwZGF0aW9uXG5cbiAgICAgICAgICAgIGluZGV4TGVnZW5kLmVudGVyKCkuYXBwZW5kKCdkaXYnKVxuICAgICAgICAgICAgICAgIC5hdHRyKCdjbGFzcycsIGBsZWdlbmQtZGl2IGluZGV4TGVnZW5kYClcbiAgICAgICAgICAgICAgICAuc3R5bGUoJ2Rpc3BsYXknLCAnZmxleCcpXG4gICAgICAgICAgICAgICAgLnN0eWxlKCdhbGlnbi1pdGVtcycsIGBzdGFydGApXG4gICAgICAgICAgICAgICAgLy8gLnN0eWxlKCd3aWR0aCcsIGAke2xlZ2VuZFdpZHRofXB4YClcbiAgICAgICAgICAgICAgICAuaHRtbChkID0+IHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNvbG9yID0gKCtkLmtleSAhPT0gbnVsbCkgJiYgIShpc05hTigrZC5rZXkpKSA/IHByb3BzLnN0cmlwQ29sb3JbK2Qua2V5XSA6IHByb3BzLmJhc2VDb2xvcjtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGA8c3BhbiBzdHlsZT1cIndpZHRoOjFyZW07IGhlaWdodDoxcmVtO21pbi13aWR0aDoxcmVtOyBtaW4taGVpZ2h0OjFyZW07IGJhY2tncm91bmQ6ICR7Y29sb3J9XCI+PC9zcGFuPiA8cCBzdHlsZT1cIm1hcmdpbjowIDAgMCAwLjVyZW07XCI+JHtkLnZhbHVlfTwvcD5gXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAubWVyZ2UoaW5kZXhMZWdlbmQpXG4gICAgICAgICAgICAgICAgLy8gLnN0eWxlKCd3aWR0aCcsIGAke2xlZ2VuZFdpZHRofXB4YClcbiAgICAgICAgICAgICAgICAuaHRtbChkID0+IHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNvbG9yID0gKCtkLmtleSAhPT0gbnVsbCkgJiYgIShpc05hTigrZC5rZXkpKSA/IHByb3BzLnN0cmlwQ29sb3JbK2Qua2V5XSA6IHByb3BzLmJhc2VDb2xvcjtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGA8c3BhbiBzdHlsZT1cIndpZHRoOjFyZW07IGhlaWdodDoxcmVtO21pbi13aWR0aDoxcmVtOyBtaW4taGVpZ2h0OjFyZW07IGJhY2tncm91bmQ6ICR7Y29sb3J9XCI+PC9zcGFuPiA8cCBzdHlsZT1cIm1hcmdpbjowIDAgMCAwLjVyZW07XCI+JHtkLnZhbHVlfTwvcD5gXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGluZGV4TGVnZW5kLmV4aXQoKVxuICAgICAgICAgICAgICAgIC50cmFuc2l0aW9uKHRyYW5zaXRpb24pXG4gICAgICAgICAgICAgICAgLnJlbW92ZSgpO1xuXG5cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG4vLyBjb25zb2xlLmxvZyh0aGlzLmRlZmF1bHRQcm9wcyk7XG5leHBvcnQgZGVmYXVsdCBDb3VudHJ5TG9ja2Rvd25JbmRpY2F0b3JTdHJpcHM7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/lib/chart.js\n");

/***/ })

})